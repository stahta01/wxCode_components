#################################################################
## This Makefile Exported by MinGW Developer Studio
## Copyright (c) 2002-2004 by Parinya Thipchart
#################################################################

ifneq (,$(findstring Release, $(CFG)))
  override CFG = Release
else
  override CFG = Debug
endif

PROJECT = MySpell_static
CC = g++

AR = ar
ifeq ($(CFG),Debug)
  OBJ_DIR = Debug_static
  OUTPUT_DIR = ../lib
  TARGET = libmyspelld.a
  C_INCLUDE_DIRS = 
  C_PREPROC = 
  CFLAGS = -pipe  -Wall -g2 -O0 -frtti -fexceptions 
  ARFLAGS =  rcs
endif

ifeq ($(CFG),Release)
  OBJ_DIR = Release_static
  OUTPUT_DIR = ../lib
  TARGET = libmyspell.a
  C_INCLUDE_DIRS = 
  C_PREPROC = 
  CFLAGS = -pipe  -Wall -g0 -O2 -frtti -fexceptions 
  ARFLAGS =  rcs
endif

SRC_OBJS = \
  $(OBJ_DIR)/affentry.o	\
  $(OBJ_DIR)/affixmgr.o	\
  $(OBJ_DIR)/csutil.o	\
  $(OBJ_DIR)/dictmgr.o	\
  $(OBJ_DIR)/hashmgr.o	\
  $(OBJ_DIR)/myspell.o	\
  $(OBJ_DIR)/suggestmgr.o

define build_target
@echo Creating library...
@$(AR) $(ARFLAGS) "$(OUTPUT_DIR)/$(TARGET)" $(SRC_OBJS)
endef

define compile_source
@echo Compiling $<
@$(CC) $(CFLAGS) $(C_PREPROC) $(C_INCLUDE_DIRS) -c "$<" -o "$@"
endef

.PHONY: print_header directories

$(TARGET): print_header directories $(SRC_OBJS)
	$(build_target)

.PHONY: clean cleanall

cleanall:
	@echo Deleting intermediate files for 'MySpell_static - $(CFG)'
	-@rm -rf "$(OBJ_DIR)"
	-@rm -rf "$(OUTPUT_DIR)/$(TARGET)"
	-@rmdir "$(OUTPUT_DIR)"

clean:
	@echo Deleting intermediate files for 'MySpell_static - $(CFG)'
	-@rm -rf $(OBJ_DIR)

print_header:
	@echo ----------Configuration: MySpell_static - $(CFG)----------

directories:
	-@if [ ! -d "$(OUTPUT_DIR)" ]; then mkdir "$(OUTPUT_DIR)"; fi
	-@if [ ! -d "$(OBJ_DIR)" ]; then mkdir "$(OBJ_DIR)"; fi

$(OBJ_DIR)/affentry.o: affentry.cxx	\
license.readme	\
affentry.hxx	\
atypes.hxx	\
baseaffix.hxx	\
affixmgr.hxx	\
hashmgr.hxx	\
htypes.hxx
	$(compile_source)

$(OBJ_DIR)/affixmgr.o: affixmgr.cxx	\
license.readme	\
affixmgr.hxx	\
atypes.hxx	\
baseaffix.hxx	\
hashmgr.hxx	\
htypes.hxx	\
affentry.hxx
	$(compile_source)

$(OBJ_DIR)/csutil.o: csutil.cxx	\
csutil.hxx
	$(compile_source)

$(OBJ_DIR)/dictmgr.o: dictmgr.cxx	\
dictmgr.hxx
	$(compile_source)

$(OBJ_DIR)/hashmgr.o: hashmgr.cxx	\
license.readme	\
hashmgr.hxx	\
htypes.hxx
	$(compile_source)

$(OBJ_DIR)/myspell.o: myspell.cxx	\
license.readme	\
myspell.hxx	\
hashmgr.hxx	\
htypes.hxx	\
affixmgr.hxx	\
atypes.hxx	\
baseaffix.hxx	\
suggestmgr.hxx	\
csutil.hxx
	$(compile_source)

$(OBJ_DIR)/suggestmgr.o: suggestmgr.cxx	\
license.readme	\
suggestmgr.hxx	\
atypes.hxx	\
affixmgr.hxx	\
baseaffix.hxx	\
hashmgr.hxx	\
htypes.hxx
	$(compile_source)



