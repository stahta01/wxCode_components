// This is an additional doxygen documentation page
// To get access to the entire documentation of this
// component, you should run 'doxygen' in this folder


/*! 

\mainpage 

<center><em>libxml2 wrappers for wxWidgets<br/>written by Francesco Montorsi (c) 2005 - 2012</em></center>

This is the reference guide for wxXml2 component.
wxXml2 are C++ wrappers of libxml2 for the wxWidgets cross-platform GUI toolkit.
wxXml2 is wxWidgets-licensed; libxml2 is MIT-licensed and libiconv (the dependency of libxml2) is
LGPL-licensend.

Currently there is not a full tutorial but the usage of wxXml2 classes is pretty easy; just take a look
at the \ref sample page to get an idea.

To build wxXml2 and integrate it in your program, look at the \ref installation page.

Last, also look at \ref refcount page for some important notes about wxXml2 classes usage.

*/



/*! 

\page sample The minimal sample of wxXml2

This is the source file of the minimal wxXml2 sample reported here as a quick reference...
\include minimal.cpp

*/




/*!

\page installation wxXml2 installation

The wxXml2 wrappers are packed in a few source files and few header files,
so you <b>could think the best way to use them is to build the source files
together with the sources of your app</b>: in this case you should just add
the source & header files to your project and compile them with the
standard wxWidgets flags (they support both Unicode/ANSI, shared/static, debug/release builds).

However, you should take in count that even if you include wxXml2 sources and headers in your
project, you will still need to add the libxml2 and libiconv dependencies to your project.

wxXml2, in fact, is a wrapper for libxml2 and thus it depends on libxml2 and all libxml2's dependencies, too.
Libxml2 depends on zlib and iconv. The first library is already built-in with wxWidgets so that there
are no problems with that. Libiconv instead needs to be compiled and linked together with
libxml2 and wxxml2.

So, <b>others may find a library more portable</b>; just choose your favourite integration mode.
Below you find help about compiling wxXml2 as a <b>library</b>.

<br/><br/>


\section win32_msvc6 How to compile the wxXml2 library on win32 (with MSVC project files)

<b>The MSVC6 project files shipped with wxXml2 do not build the <em>required</em> libxml2 and libiconv libraries.</b>
This is because the compilation of these "thirdparty" libraries require some steps that cannot be performed by
MSVC6 project files and require to run a makefile.

If you try to use the MSVC6 project files without thirdparty libraries in <tt>wxxml2\lib</tt> you'll get (obviously!) a lot of linker errors about "unresolved external symbols".
You can still use MSVC6 project files to build wxXml2 and its sample but you will first need to:

1) get the libxml2 and libiconv binaries (look at http://www.zlatkovic.com/libxml.en.html) and put the precompiled
libraries in <tt>wxxml2\lib</tt>;

or

2) compile for the first time wxXml2 using the makefiles (following builds of wxXml2 can be done through MSVC6 project files as long as thirdparty libraries are not deleted from <tt>wxxml2\lib</tt>).
This is probably the fastest way since libxml2 and libiconv are packed with wxXml2 now.
For help about compiling wxXml2 with makefiles, please look at the section below.

<br/>


\section win32 How to compile the wxXml2 library on win32 (with makefiles)

To build a library from wxXml2 sources, you can use the makefiles in the BUILD folder.
They support all common wx flags (WX_DEBUG=0/1, WX_UNICODE=1/0, WX_SHARED=1/0).
In win32 releases you will also find that exists a "thirdparty" folder which contains
the libxml2 and libiconv libraries; this is very handy on win32, where libxml2 and libiconv
are always missing (not part of Microsoft sources, yet ;-)) since you just need to go in
the build\ folder of wxXml2 and type:

for MSVC compiler: <tt>nmake -fmakefile.vc [same wxWidgets configuration using WX_DEBUG=0/1 WX_SHARED=0/1 WX_UNICODE=0/1 options]</tt><br/>
for Borland compiler: <tt>make -fmakefile.bcc [same wxWidgets configuration using WX_DEBUG=0/1 WX_SHARED=0/1 WX_UNICODE=0/1 options]</tt><br/>
for Watcom compiler: <tt>wmake -fmakefile.wat [same wxWidgets configuration using WX_DEBUG=0/1 WX_SHARED=0/1 WX_UNICODE=0/1 options]</tt><br/>
for Mingw compiler: <tt>mingw32-make -fmakefile.gcc [same wxWidgets configuration using WX_DEBUG=0/1 WX_SHARED=0/1 WX_UNICODE=0/1 options]</tt>

Some notes: consider it normal to get thousands warnings from libxml2 and libiconv when compiling them in debug mode.
It's also normal to get always the following linker warning with MSVC:

<tt>LINK : warning LNK4049: locally defined symbol "_xmlFree" imported</tt>

this is a libxml2 problem...

To help you to find the generated libraries/DLLs, I configured the build system so that all *.lib and *.dll files
of libiconv and libxml2 goes in the <tt>wxxml2/lib</tt> folder. This also means that in your program you can include as new
library path searched by the linker only <tt>wxxml2/lib</tt>; however you still have to add as include paths all the
- <tt>wxxml2/include</tt>, 
- <tt>wxxml2/thirdparty/libxml2/include</tt>, 
- <tt>wxxml2/thirdparty/libiconv/include</tt> 

folders.

<br/>



\section unix How to compile the wxXml2 library on Unix-based OS

You will notice that the TAR.GZ distribution of wxXml2 comes without the libxml2 and libiconv thirdparty libraries. This is because these two libraries typically are part of all major linux distributions so that you probably won't need to download and install them.
So, <b>on Unix-based operating systems</b>, unzip the tar.gz archive and type:

<tt>
  cd build
  
  ./configure
  
  make
  
  make install
</tt>

Type "./configure --help" for more info.
For any problem, feel free to contact frm@users.sourceforge.net.

<br/>

After compilation, the most important thing you should do, specially if you've never used these classes
before, is to build the \ref sample and read its source file.
These doxygen docs are a useful and detailed reference manual to use after you learnt
how wxxml2 wrappers must be used.

*/