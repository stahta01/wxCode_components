# =========================================================================
#     This makefile was generated by
#     Bakefile 0.1.9 (http://bakefile.sourceforge.net)
#     Do not modify, all changes will be overwritten!
# =========================================================================



# -------------------------------------------------------------------------
# These are configurable options:
# -------------------------------------------------------------------------

# C compiler 
CC = wcc386

# Standard flags for CC 
CFLAGS = 

# Standard preprocessor flags (common for CC and CXX) 
CPPFLAGS = 

# Compile Unicode build? [0,1]
UNICODE = 0

# Type of compiled binaries [debug,release]
BUILD = release



# -------------------------------------------------------------------------
# Do not modify the rest of this file!
# -------------------------------------------------------------------------

# Speed up compilation a bit:
!ifdef __LOADDLL__
!  loaddll wcc      wccd
!  loaddll wccaxp   wccdaxp
!  loaddll wcc386   wccd386
!  loaddll wpp      wppdi86
!  loaddll wppaxp   wppdaxp
!  loaddll wpp386   wppd386
!  loaddll wlink    wlink
!  loaddll wlib     wlibd
!endif

# We need these variables in some bakefile-made rules:
WATCOM_CWD = $+ $(%cdrive):$(%cwd) $-

### Conditionally set variables: ###

__WARNINGS_0 =
!ifeq BUILD debug
__WARNINGS_0 = -wx
!endif
!ifeq BUILD release
__WARNINGS_0 = 
!endif
__UNICODE_DEFINE_p =
!ifeq UNICODE 1
__UNICODE_DEFINE_p = -d_UNICODE
!endif
__OPTIMIZEFLAG_1 =
!ifeq BUILD debug
__OPTIMIZEFLAG_1 = -od
!endif
!ifeq BUILD release
__OPTIMIZEFLAG_1 = -ot -ox
!endif
__DEBUGINFO_2 =
!ifeq BUILD debug
__DEBUGINFO_2 = -d2
!endif
!ifeq BUILD release
__DEBUGINFO_2 = -d0
!endif

### Variables: ###

ICONV_CFLAGS = $(__WARNINGS_0) $(__UNICODE_DEFINE_p) $(__OPTIMIZEFLAG_1) &
	$(__DEBUGINFO_2) -dHAVE_CONFIG_H -dENABLE_RELOCATABLE=1 -dIN_LIBRARY &
	-dNO_XMALLOC -dset_relocation_prefix=libiconv_set_relocation_prefix &
	-drelocate=libiconv_relocate -dEILSEQ=ENOENT -i=..\include &
	-i=..\libcharset\include -i=..\libcharset $(CPPFLAGS) $(CFLAGS)
ICONV_OBJECTS =  &
	watcom\iconv_iconv.obj &
	watcom\iconv_localcharset.obj &
	watcom\iconv_relocatable.obj


all : watcom
watcom :
	-if not exist watcom mkdir watcom

### Targets: ###

all : .SYMBOLIC ..\lib\config.h ..\include\iconv.h ..\libcharset\include\localcharset.h ..\libcharset\config.h ..\lib\iconv.lib

clean : .SYMBOLIC 
	-if exist watcom\*.obj del watcom\*.obj
	-if exist watcom\*.res del watcom\*.res
	-if exist watcom\*.lbc del watcom\*.lbc
	-if exist watcom\*.ilk del watcom\*.ilk
	-if exist watcom\*.pch del watcom\*.pch
	-if exist ..\lib\iconv.lib del ..\lib\iconv.lib

..\lib\config.h :  ..\lib\config.h.msvc
	copy ..\lib\config.h.msvc ..\lib\config.h

..\include\iconv.h :  ..\include\iconv.h.msvc-static
	copy ..\include\iconv.h.msvc-static ..\include\iconv.h

..\libcharset\include\localcharset.h :  ..\libcharset\include\localcharset.h.in
	copy ..\libcharset\include\localcharset.h.in ..\libcharset\include\localcharset.h

..\libcharset\config.h :  ..\libcharset\config.h.msvc
	copy ..\libcharset\config.h.msvc ..\libcharset\config.h

..\lib\iconv.lib :  $(ICONV_OBJECTS) ..\lib\config.h ..\include\iconv.h ..\libcharset\include\localcharset.h ..\libcharset\config.h
	@%create watcom\iconv.lbc
	@for %i in ($(ICONV_OBJECTS)) do @%append watcom\iconv.lbc +%i
	wlib -q -p4096 -n -b $^@ @watcom\iconv.lbc

watcom\iconv_iconv.obj :  .AUTODEPEND .\..\lib\iconv.c
	$(CC) -zq -fo=$^@ $(ICONV_CFLAGS) $<

watcom\iconv_localcharset.obj :  .AUTODEPEND .\..\libcharset\lib\localcharset.c
	$(CC) -zq -fo=$^@ $(ICONV_CFLAGS) $<

watcom\iconv_relocatable.obj :  .AUTODEPEND .\..\lib\relocatable.c
	$(CC) -zq -fo=$^@ $(ICONV_CFLAGS) $<

