# =========================================================================
#     This makefile was generated by
#     Bakefile 0.2.2 (http://bakefile.sourceforge.net)
#     Do not modify, all changes will be overwritten!
# =========================================================================



# -------------------------------------------------------------------------
# These are configurable options:
# -------------------------------------------------------------------------

# C compiler 
CC := gcc

# Standard flags for CC 
CFLAGS := 

# Standard preprocessor flags (common for CC and CXX) 
CPPFLAGS := 

# Standard linker flags 
LDFLAGS := 

# If set to zero a STATIC libxml library will be built [0,1]
SHARED := 0

# Compile Unicode build? [0,1]
UNICODE := 0

# Type of compiled binaries [debug,release]
BUILD := release

# The iconv library main folder 
ICONV_DIR := c:\iconv

# Enable thread safety [no,ctls,native,posix]
WITH_THREADS := native

# Enable iconv support [0,1]
WITH_ICONV := 1

# Enable ZLIB support [0,1]
WITH_ZLIB := 0



# -------------------------------------------------------------------------
# Do not modify the rest of this file!
# -------------------------------------------------------------------------

### Variables: ###

CPPDEPS = -MT$@ -MF$@.d -MD
LIBXML2_LIB_CFLAGS = -DHAVE_W32API_H $(__UNICODE_DEFINE_p) $(__OPTIMIZEFLAG) \
	$(__DEBUGINFO) -I..\include -I$(ICONV_DIR)\include $(__REENTRANT_DEF_p) \
	$(__WIN32_THREADS_DEF_p) $(__CTLS_THREADS_DEF_p) $(__PTHREADS_DEF_p) \
	$(__ZLIB_DEF_p) $(__DEBUG_DEF_p) $(__STATIC_DEF_p) -DWIN32 -D_WINDOWS -D_MBCS \
	-Wall $(CPPFLAGS) $(CFLAGS)
LIBXML2_LIB_OBJECTS =  \
	mingw\libxml2_lib_c14n.o \
	mingw\libxml2_lib_catalog.o \
	mingw\libxml2_lib_chvalid.o \
	mingw\libxml2_lib_debugXML.o \
	mingw\libxml2_lib_dict.o \
	mingw\libxml2_lib_DOCBparser.o \
	mingw\libxml2_lib_encoding.o \
	mingw\libxml2_lib_entities.o \
	mingw\libxml2_lib_error.o \
	mingw\libxml2_lib_globals.o \
	mingw\libxml2_lib_hash.o \
	mingw\libxml2_lib_HTMLparser.o \
	mingw\libxml2_lib_HTMLtree.o \
	mingw\libxml2_lib_legacy.o \
	mingw\libxml2_lib_list.o \
	mingw\libxml2_lib_nanoftp.o \
	mingw\libxml2_lib_nanohttp.o \
	mingw\libxml2_lib_parser.o \
	mingw\libxml2_lib_parserInternals.o \
	mingw\libxml2_lib_pattern.o \
	mingw\libxml2_lib_relaxng.o \
	mingw\libxml2_lib_SAX2.o \
	mingw\libxml2_lib_SAX.o \
	mingw\libxml2_lib_threads.o \
	mingw\libxml2_lib_tree.o \
	mingw\libxml2_lib_uri.o \
	mingw\libxml2_lib_valid.o \
	mingw\libxml2_lib_xinclude.o \
	mingw\libxml2_lib_xlink.o \
	mingw\libxml2_lib_xmlIO.o \
	mingw\libxml2_lib_xmlmemory.o \
	mingw\libxml2_lib_xmlreader.o \
	mingw\libxml2_lib_xmlregexp.o \
	mingw\libxml2_lib_xmlsave.o \
	mingw\libxml2_lib_xmlschemas.o \
	mingw\libxml2_lib_xmlschemastypes.o \
	mingw\libxml2_lib_xmlunicode.o \
	mingw\libxml2_lib_xmlwriter.o \
	mingw\libxml2_lib_xpath.o \
	mingw\libxml2_lib_xpointer.o \
	mingw\libxml2_lib_xmlstring.o
LIBXML2_DLL_CFLAGS = -DHAVE_W32API_H $(__UNICODE_DEFINE_p) $(__OPTIMIZEFLAG) \
	$(__DEBUGINFO) -I..\include -I$(ICONV_DIR)\include $(__REENTRANT_DEF_p) \
	$(__WIN32_THREADS_DEF_p) $(__CTLS_THREADS_DEF_p) $(__PTHREADS_DEF_p) \
	$(__ZLIB_DEF_p) $(__DEBUG_DEF_p) $(__STATIC_DEF_p) -DWIN32 -D_WINDOWS -D_MBCS \
	-Wall $(CPPFLAGS) $(CFLAGS)
LIBXML2_DLL_OBJECTS =  \
	mingw\libxml2_dll_c14n.o \
	mingw\libxml2_dll_catalog.o \
	mingw\libxml2_dll_chvalid.o \
	mingw\libxml2_dll_debugXML.o \
	mingw\libxml2_dll_dict.o \
	mingw\libxml2_dll_DOCBparser.o \
	mingw\libxml2_dll_encoding.o \
	mingw\libxml2_dll_entities.o \
	mingw\libxml2_dll_error.o \
	mingw\libxml2_dll_globals.o \
	mingw\libxml2_dll_hash.o \
	mingw\libxml2_dll_HTMLparser.o \
	mingw\libxml2_dll_HTMLtree.o \
	mingw\libxml2_dll_legacy.o \
	mingw\libxml2_dll_list.o \
	mingw\libxml2_dll_nanoftp.o \
	mingw\libxml2_dll_nanohttp.o \
	mingw\libxml2_dll_parser.o \
	mingw\libxml2_dll_parserInternals.o \
	mingw\libxml2_dll_pattern.o \
	mingw\libxml2_dll_relaxng.o \
	mingw\libxml2_dll_SAX2.o \
	mingw\libxml2_dll_SAX.o \
	mingw\libxml2_dll_threads.o \
	mingw\libxml2_dll_tree.o \
	mingw\libxml2_dll_uri.o \
	mingw\libxml2_dll_valid.o \
	mingw\libxml2_dll_xinclude.o \
	mingw\libxml2_dll_xlink.o \
	mingw\libxml2_dll_xmlIO.o \
	mingw\libxml2_dll_xmlmemory.o \
	mingw\libxml2_dll_xmlreader.o \
	mingw\libxml2_dll_xmlregexp.o \
	mingw\libxml2_dll_xmlsave.o \
	mingw\libxml2_dll_xmlschemas.o \
	mingw\libxml2_dll_xmlschemastypes.o \
	mingw\libxml2_dll_xmlunicode.o \
	mingw\libxml2_dll_xmlwriter.o \
	mingw\libxml2_dll_xpath.o \
	mingw\libxml2_dll_xpointer.o \
	mingw\libxml2_dll_xmlstring.o
TESTAUTOMATA_CFLAGS = -DHAVE_W32API_H $(__UNICODE_DEFINE_p) $(__OPTIMIZEFLAG) \
	$(__DEBUGINFO) -I..\include -I$(ICONV_DIR)\include $(__REENTRANT_DEF_p) \
	$(__WIN32_THREADS_DEF_p) $(__CTLS_THREADS_DEF_p) $(__PTHREADS_DEF_p) \
	$(__ZLIB_DEF_p) $(__DEBUG_DEF_p) $(__STATIC_DEF_p) -DWIN32 -D_WINDOWS -D_MBCS \
	-Wall $(CPPFLAGS) $(CFLAGS)
TESTAUTOMATA_OBJECTS =  \
	mingw\testAutomata_testAutomata.o
TESTC14N_CFLAGS = -DHAVE_W32API_H $(__UNICODE_DEFINE_p) $(__OPTIMIZEFLAG) \
	$(__DEBUGINFO) -I..\include -I$(ICONV_DIR)\include $(__REENTRANT_DEF_p) \
	$(__WIN32_THREADS_DEF_p) $(__CTLS_THREADS_DEF_p) $(__PTHREADS_DEF_p) \
	$(__ZLIB_DEF_p) $(__DEBUG_DEF_p) $(__STATIC_DEF_p) -DWIN32 -D_WINDOWS -D_MBCS \
	-Wall $(CPPFLAGS) $(CFLAGS)
TESTC14N_OBJECTS =  \
	mingw\testC14N_testC14N.o
TESTHTML_CFLAGS = -DHAVE_W32API_H $(__UNICODE_DEFINE_p) $(__OPTIMIZEFLAG) \
	$(__DEBUGINFO) -I..\include -I$(ICONV_DIR)\include $(__REENTRANT_DEF_p) \
	$(__WIN32_THREADS_DEF_p) $(__CTLS_THREADS_DEF_p) $(__PTHREADS_DEF_p) \
	$(__ZLIB_DEF_p) $(__DEBUG_DEF_p) $(__STATIC_DEF_p) -DWIN32 -D_WINDOWS -D_MBCS \
	-Wall $(CPPFLAGS) $(CFLAGS)
TESTHTML_OBJECTS =  \
	mingw\testHTML_testHTML.o
TESTREADER_CFLAGS = -DHAVE_W32API_H $(__UNICODE_DEFINE_p) $(__OPTIMIZEFLAG) \
	$(__DEBUGINFO) -I..\include -I$(ICONV_DIR)\include $(__REENTRANT_DEF_p) \
	$(__WIN32_THREADS_DEF_p) $(__CTLS_THREADS_DEF_p) $(__PTHREADS_DEF_p) \
	$(__ZLIB_DEF_p) $(__DEBUG_DEF_p) $(__STATIC_DEF_p) -DWIN32 -D_WINDOWS -D_MBCS \
	-Wall $(CPPFLAGS) $(CFLAGS)
TESTREADER_OBJECTS =  \
	mingw\testReader_testReader.o
TESTREGEXP_CFLAGS = -DHAVE_W32API_H $(__UNICODE_DEFINE_p) $(__OPTIMIZEFLAG) \
	$(__DEBUGINFO) -I..\include -I$(ICONV_DIR)\include $(__REENTRANT_DEF_p) \
	$(__WIN32_THREADS_DEF_p) $(__CTLS_THREADS_DEF_p) $(__PTHREADS_DEF_p) \
	$(__ZLIB_DEF_p) $(__DEBUG_DEF_p) $(__STATIC_DEF_p) -DWIN32 -D_WINDOWS -D_MBCS \
	-Wall $(CPPFLAGS) $(CFLAGS)
TESTREGEXP_OBJECTS =  \
	mingw\testRegexp_testRegexp.o
TESTRELAX_CFLAGS = -DHAVE_W32API_H $(__UNICODE_DEFINE_p) $(__OPTIMIZEFLAG) \
	$(__DEBUGINFO) -I..\include -I$(ICONV_DIR)\include $(__REENTRANT_DEF_p) \
	$(__WIN32_THREADS_DEF_p) $(__CTLS_THREADS_DEF_p) $(__PTHREADS_DEF_p) \
	$(__ZLIB_DEF_p) $(__DEBUG_DEF_p) $(__STATIC_DEF_p) -DWIN32 -D_WINDOWS -D_MBCS \
	-Wall $(CPPFLAGS) $(CFLAGS)
TESTRELAX_OBJECTS =  \
	mingw\testRelax_testRelax.o
TESTSAX_CFLAGS = -DHAVE_W32API_H $(__UNICODE_DEFINE_p) $(__OPTIMIZEFLAG) \
	$(__DEBUGINFO) -I..\include -I$(ICONV_DIR)\include $(__REENTRANT_DEF_p) \
	$(__WIN32_THREADS_DEF_p) $(__CTLS_THREADS_DEF_p) $(__PTHREADS_DEF_p) \
	$(__ZLIB_DEF_p) $(__DEBUG_DEF_p) $(__STATIC_DEF_p) -DWIN32 -D_WINDOWS -D_MBCS \
	-Wall $(CPPFLAGS) $(CFLAGS)
TESTSAX_OBJECTS =  \
	mingw\testSax_testSax.o
TESTSCHEMAS_CFLAGS = -DHAVE_W32API_H $(__UNICODE_DEFINE_p) $(__OPTIMIZEFLAG) \
	$(__DEBUGINFO) -I..\include -I$(ICONV_DIR)\include $(__REENTRANT_DEF_p) \
	$(__WIN32_THREADS_DEF_p) $(__CTLS_THREADS_DEF_p) $(__PTHREADS_DEF_p) \
	$(__ZLIB_DEF_p) $(__DEBUG_DEF_p) $(__STATIC_DEF_p) -DWIN32 -D_WINDOWS -D_MBCS \
	-Wall $(CPPFLAGS) $(CFLAGS)
TESTSCHEMAS_OBJECTS =  \
	mingw\testSchemas_testSchemas.o
TESTURI_CFLAGS = -DHAVE_W32API_H $(__UNICODE_DEFINE_p) $(__OPTIMIZEFLAG) \
	$(__DEBUGINFO) -I..\include -I$(ICONV_DIR)\include $(__REENTRANT_DEF_p) \
	$(__WIN32_THREADS_DEF_p) $(__CTLS_THREADS_DEF_p) $(__PTHREADS_DEF_p) \
	$(__ZLIB_DEF_p) $(__DEBUG_DEF_p) $(__STATIC_DEF_p) -DWIN32 -D_WINDOWS -D_MBCS \
	-Wall $(CPPFLAGS) $(CFLAGS)
TESTURI_OBJECTS =  \
	mingw\testURI_testURI.o
TESTXPATH_CFLAGS = -DHAVE_W32API_H $(__UNICODE_DEFINE_p) $(__OPTIMIZEFLAG) \
	$(__DEBUGINFO) -I..\include -I$(ICONV_DIR)\include $(__REENTRANT_DEF_p) \
	$(__WIN32_THREADS_DEF_p) $(__CTLS_THREADS_DEF_p) $(__PTHREADS_DEF_p) \
	$(__ZLIB_DEF_p) $(__DEBUG_DEF_p) $(__STATIC_DEF_p) -DWIN32 -D_WINDOWS -D_MBCS \
	-Wall $(CPPFLAGS) $(CFLAGS)
TESTXPATH_OBJECTS =  \
	mingw\testXPath_testXPath.o
XMLLINT_CFLAGS = -DHAVE_W32API_H $(__UNICODE_DEFINE_p) $(__OPTIMIZEFLAG) \
	$(__DEBUGINFO) -I..\include -I$(ICONV_DIR)\include $(__REENTRANT_DEF_p) \
	$(__WIN32_THREADS_DEF_p) $(__CTLS_THREADS_DEF_p) $(__PTHREADS_DEF_p) \
	$(__ZLIB_DEF_p) $(__DEBUG_DEF_p) $(__STATIC_DEF_p) -DWIN32 -D_WINDOWS -D_MBCS \
	-Wall $(CPPFLAGS) $(CFLAGS)
XMLLINT_OBJECTS =  \
	mingw\xmllint_xmllint.o

### Conditionally set variables: ###

ifeq ($(SHARED),0)
__libxml2_lib___depname = ..\lib\libxml2.a
endif
ifeq ($(SHARED),1)
__libxml2_dll___depname = ..\lib\libxml2.dll
endif
ifeq ($(SHARED),0)
____libonly_DEPNAME_DEP = $(__libxml2_lib___depname)
endif
ifeq ($(SHARED),1)
____libonly_DEPNAME_DEP = $(__libxml2_dll___depname)
endif
ifeq ($(UNICODE),1)
__UNICODE_DEFINE_p = -D_UNICODE
endif
ifeq ($(BUILD),debug)
__OPTIMIZEFLAG = -O0
endif
ifeq ($(BUILD),release)
__OPTIMIZEFLAG = -O2
endif
ifeq ($(WITH_THREADS),ctls)
__REENTRANT_DEF_p = -D_REENTRANT
endif
ifeq ($(WITH_THREADS),native)
__REENTRANT_DEF_p = -D_REENTRANT
endif
ifeq ($(WITH_THREADS),posix)
__REENTRANT_DEF_p = -D_REENTRANT
endif
ifeq ($(WITH_THREADS),ctls)
__WIN32_THREADS_DEF_p = -DHAVE_WIN32_THREADS
endif
ifeq ($(WITH_THREADS),native)
__WIN32_THREADS_DEF_p = -DHAVE_WIN32_THREADS
endif
ifeq ($(WITH_THREADS),ctls)
__CTLS_THREADS_DEF_p = -DHAVE_COMPILER_TLS
endif
ifeq ($(WITH_THREADS),posix)
__PTHREADS_DEF_p = -DHAVE_PTHREAD_H
endif
ifeq ($(WITH_ZLIB),1)
__ZLIB_DEF_p = -DHAVE_ZLIB_H
endif
ifeq ($(BUILD),debug)
__DEBUG_DEF_p = -D_DEBUG
endif
ifeq ($(BUILD),release)
__DEBUG_DEF_p = -DNDEBUG
endif
ifeq ($(SHARED),0)
__STATIC_DEF_p = -DLIBXML_STATIC
endif
ifeq ($(WITH_ICONV),1)
__ICONV_LIB_p = -liconv
endif
ifeq ($(WITH_THREADS),native)
__WSOCK32_LIB_p = -lwsock32
endif
ifeq ($(WITH_ZLIB),1)
__ZLIB_LIB_p = -lzdll
endif
ifeq ($(WITH_THREADS),posix)
__POSIX_LIB_p = -lpthreadVC
endif
ifeq ($(BUILD),debug)
__DEBUGINFO = -g
endif
ifeq ($(BUILD),release)
__DEBUGINFO = 
endif


all: mingw
mingw:
	-if not exist mingw mkdir mingw

### Targets: ###

all: ..\config.h setupdirs $(__libxml2_lib___depname) $(__libxml2_dll___depname) ..\bin\testAutomata.exe ..\bin\testC14N.exe ..\bin\testHTML.exe ..\bin\testReader.exe ..\bin\testRegexp.exe ..\bin\testRelax.exe ..\bin\testSax.exe ..\bin\testSchemas.exe ..\bin\testURI.exe ..\bin\testXPath.exe ..\bin\xmllint.exe

clean: 
	-if exist mingw\*.o del mingw\*.o
	-if exist mingw\*.d del mingw\*.d
	-if exist ..\lib\libxml2.a del ..\lib\libxml2.a
	-if exist ..\lib\libxml2.dll del ..\lib\libxml2.dll
	-if exist ..\lib\libxml2.a del ..\lib\libxml2.a
	-if exist ..\bin\testAutomata.exe del ..\bin\testAutomata.exe
	-if exist ..\bin\testC14N.exe del ..\bin\testC14N.exe
	-if exist ..\bin\testHTML.exe del ..\bin\testHTML.exe
	-if exist ..\bin\testReader.exe del ..\bin\testReader.exe
	-if exist ..\bin\testRegexp.exe del ..\bin\testRegexp.exe
	-if exist ..\bin\testRelax.exe del ..\bin\testRelax.exe
	-if exist ..\bin\testSax.exe del ..\bin\testSax.exe
	-if exist ..\bin\testSchemas.exe del ..\bin\testSchemas.exe
	-if exist ..\bin\testURI.exe del ..\bin\testURI.exe
	-if exist ..\bin\testXPath.exe del ..\bin\testXPath.exe
	-if exist ..\bin\xmllint.exe del ..\bin\xmllint.exe

..\config.h: ..\include\win32config.h
	copy ..\include\win32config.h ..\config.h

setupbuilddir: 
	if not exist mingw mkdir mingw

..\lib: 
	if not exist ..\lib mkdir ..\lib

..\bin: 
	if not exist ..\bin mkdir ..\bin

setupdirs: setupbuilddir ..\lib ..\bin

ifeq ($(SHARED),0)
..\lib\libxml2.a: $(LIBXML2_LIB_OBJECTS) ..\config.h ..\lib
	if exist $@ del $@
	ar rcu $@ $(LIBXML2_LIB_OBJECTS)
	ranlib $@
endif

ifeq ($(SHARED),1)
..\lib\libxml2.dll: $(LIBXML2_DLL_OBJECTS) ..\config.h ..\lib
	$(CC) -shared -fPIC -o $@ $(LIBXML2_DLL_OBJECTS) $(LDFLAGS) -mthreads  $(__DEBUGINFO) -L$(ICONV_DIR)\lib -Wl,--out-implib=..\lib\libxml2.a  $(__ICONV_LIB_p) $(__WSOCK32_LIB_p) $(__ZLIB_LIB_p) $(__POSIX_LIB_p)
endif

libonly: ..\config.h setupdirs $(____libonly_DEPNAME_DEP)

..\bin\testAutomata.exe: $(TESTAUTOMATA_OBJECTS) $(__libxml2_lib___depname)
	$(CC) -o $@ $(TESTAUTOMATA_OBJECTS) $(LDFLAGS) -mthreads  $(__DEBUGINFO) -L$(ICONV_DIR)\lib   ..\lib\libxml2.a $(__ICONV_LIB_p) $(__WSOCK32_LIB_p) $(__ZLIB_LIB_p) $(__POSIX_LIB_p)

..\bin\testC14N.exe: $(TESTC14N_OBJECTS) $(__libxml2_lib___depname)
	$(CC) -o $@ $(TESTC14N_OBJECTS) $(LDFLAGS) -mthreads  $(__DEBUGINFO) -L$(ICONV_DIR)\lib   ..\lib\libxml2.a $(__ICONV_LIB_p) $(__WSOCK32_LIB_p) $(__ZLIB_LIB_p) $(__POSIX_LIB_p)

..\bin\testHTML.exe: $(TESTHTML_OBJECTS) $(__libxml2_lib___depname)
	$(CC) -o $@ $(TESTHTML_OBJECTS) $(LDFLAGS) -mthreads  $(__DEBUGINFO) -L$(ICONV_DIR)\lib   ..\lib\libxml2.a $(__ICONV_LIB_p) $(__WSOCK32_LIB_p) $(__ZLIB_LIB_p) $(__POSIX_LIB_p)

..\bin\testReader.exe: $(TESTREADER_OBJECTS) $(__libxml2_lib___depname)
	$(CC) -o $@ $(TESTREADER_OBJECTS) $(LDFLAGS) -mthreads  $(__DEBUGINFO) -L$(ICONV_DIR)\lib   ..\lib\libxml2.a $(__ICONV_LIB_p) $(__WSOCK32_LIB_p) $(__ZLIB_LIB_p) $(__POSIX_LIB_p)

..\bin\testRegexp.exe: $(TESTREGEXP_OBJECTS) $(__libxml2_lib___depname)
	$(CC) -o $@ $(TESTREGEXP_OBJECTS) $(LDFLAGS) -mthreads  $(__DEBUGINFO) -L$(ICONV_DIR)\lib   ..\lib\libxml2.a $(__ICONV_LIB_p) $(__WSOCK32_LIB_p) $(__ZLIB_LIB_p) $(__POSIX_LIB_p)

..\bin\testRelax.exe: $(TESTRELAX_OBJECTS) $(__libxml2_lib___depname)
	$(CC) -o $@ $(TESTRELAX_OBJECTS) $(LDFLAGS) -mthreads  $(__DEBUGINFO) -L$(ICONV_DIR)\lib   ..\lib\libxml2.a $(__ICONV_LIB_p) $(__WSOCK32_LIB_p) $(__ZLIB_LIB_p) $(__POSIX_LIB_p)

..\bin\testSax.exe: $(TESTSAX_OBJECTS) $(__libxml2_lib___depname)
	$(CC) -o $@ $(TESTSAX_OBJECTS) $(LDFLAGS) -mthreads  $(__DEBUGINFO) -L$(ICONV_DIR)\lib   ..\lib\libxml2.a $(__ICONV_LIB_p) $(__WSOCK32_LIB_p) $(__ZLIB_LIB_p) $(__POSIX_LIB_p)

..\bin\testSchemas.exe: $(TESTSCHEMAS_OBJECTS) $(__libxml2_lib___depname)
	$(CC) -o $@ $(TESTSCHEMAS_OBJECTS) $(LDFLAGS) -mthreads  $(__DEBUGINFO) -L$(ICONV_DIR)\lib   ..\lib\libxml2.a $(__ICONV_LIB_p) $(__WSOCK32_LIB_p) $(__ZLIB_LIB_p) $(__POSIX_LIB_p)

..\bin\testURI.exe: $(TESTURI_OBJECTS) $(__libxml2_lib___depname)
	$(CC) -o $@ $(TESTURI_OBJECTS) $(LDFLAGS) -mthreads  $(__DEBUGINFO) -L$(ICONV_DIR)\lib   ..\lib\libxml2.a $(__ICONV_LIB_p) $(__WSOCK32_LIB_p) $(__ZLIB_LIB_p) $(__POSIX_LIB_p)

..\bin\testXPath.exe: $(TESTXPATH_OBJECTS) $(__libxml2_lib___depname)
	$(CC) -o $@ $(TESTXPATH_OBJECTS) $(LDFLAGS) -mthreads  $(__DEBUGINFO) -L$(ICONV_DIR)\lib   ..\lib\libxml2.a $(__ICONV_LIB_p) $(__WSOCK32_LIB_p) $(__ZLIB_LIB_p) $(__POSIX_LIB_p)

..\bin\xmllint.exe: $(XMLLINT_OBJECTS) $(__libxml2_lib___depname)
	$(CC) -o $@ $(XMLLINT_OBJECTS) $(LDFLAGS) -mthreads  $(__DEBUGINFO) -L$(ICONV_DIR)\lib   ..\lib\libxml2.a $(__ICONV_LIB_p) $(__WSOCK32_LIB_p) $(__ZLIB_LIB_p) $(__POSIX_LIB_p)

mingw\libxml2_lib_c14n.o: ./../c14n.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_catalog.o: ./../catalog.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_chvalid.o: ./../chvalid.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_debugXML.o: ./../debugXML.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_dict.o: ./../dict.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_DOCBparser.o: ./../DOCBparser.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_encoding.o: ./../encoding.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_entities.o: ./../entities.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_error.o: ./../error.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_globals.o: ./../globals.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_hash.o: ./../hash.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_HTMLparser.o: ./../HTMLparser.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_HTMLtree.o: ./../HTMLtree.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_legacy.o: ./../legacy.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_list.o: ./../list.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_nanoftp.o: ./../nanoftp.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_nanohttp.o: ./../nanohttp.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_parser.o: ./../parser.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_parserInternals.o: ./../parserInternals.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_pattern.o: ./../pattern.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_relaxng.o: ./../relaxng.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_SAX2.o: ./../SAX2.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_SAX.o: ./../SAX.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_threads.o: ./../threads.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_tree.o: ./../tree.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_uri.o: ./../uri.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_valid.o: ./../valid.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_xinclude.o: ./../xinclude.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_xlink.o: ./../xlink.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_xmlIO.o: ./../xmlIO.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_xmlmemory.o: ./../xmlmemory.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_xmlreader.o: ./../xmlreader.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_xmlregexp.o: ./../xmlregexp.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_xmlsave.o: ./../xmlsave.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_xmlschemas.o: ./../xmlschemas.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_xmlschemastypes.o: ./../xmlschemastypes.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_xmlunicode.o: ./../xmlunicode.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_xmlwriter.o: ./../xmlwriter.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_xpath.o: ./../xpath.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_xpointer.o: ./../xpointer.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_lib_xmlstring.o: ./../xmlstring.c
	$(CC) -c -o $@ $(LIBXML2_LIB_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_c14n.o: ./../c14n.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_catalog.o: ./../catalog.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_chvalid.o: ./../chvalid.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_debugXML.o: ./../debugXML.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_dict.o: ./../dict.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_DOCBparser.o: ./../DOCBparser.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_encoding.o: ./../encoding.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_entities.o: ./../entities.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_error.o: ./../error.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_globals.o: ./../globals.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_hash.o: ./../hash.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_HTMLparser.o: ./../HTMLparser.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_HTMLtree.o: ./../HTMLtree.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_legacy.o: ./../legacy.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_list.o: ./../list.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_nanoftp.o: ./../nanoftp.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_nanohttp.o: ./../nanohttp.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_parser.o: ./../parser.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_parserInternals.o: ./../parserInternals.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_pattern.o: ./../pattern.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_relaxng.o: ./../relaxng.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_SAX2.o: ./../SAX2.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_SAX.o: ./../SAX.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_threads.o: ./../threads.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_tree.o: ./../tree.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_uri.o: ./../uri.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_valid.o: ./../valid.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_xinclude.o: ./../xinclude.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_xlink.o: ./../xlink.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_xmlIO.o: ./../xmlIO.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_xmlmemory.o: ./../xmlmemory.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_xmlreader.o: ./../xmlreader.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_xmlregexp.o: ./../xmlregexp.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_xmlsave.o: ./../xmlsave.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_xmlschemas.o: ./../xmlschemas.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_xmlschemastypes.o: ./../xmlschemastypes.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_xmlunicode.o: ./../xmlunicode.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_xmlwriter.o: ./../xmlwriter.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_xpath.o: ./../xpath.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_xpointer.o: ./../xpointer.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\libxml2_dll_xmlstring.o: ./../xmlstring.c
	$(CC) -c -o $@ $(LIBXML2_DLL_CFLAGS) $(CPPDEPS) $<

mingw\testAutomata_testAutomata.o: ./../testAutomata.c
	$(CC) -c -o $@ $(TESTAUTOMATA_CFLAGS) $(CPPDEPS) $<

mingw\testC14N_testC14N.o: ./../testC14N.c
	$(CC) -c -o $@ $(TESTC14N_CFLAGS) $(CPPDEPS) $<

mingw\testHTML_testHTML.o: ./../testHTML.c
	$(CC) -c -o $@ $(TESTHTML_CFLAGS) $(CPPDEPS) $<

mingw\testReader_testReader.o: ./../testReader.c
	$(CC) -c -o $@ $(TESTREADER_CFLAGS) $(CPPDEPS) $<

mingw\testRegexp_testRegexp.o: ./../testRegexp.c
	$(CC) -c -o $@ $(TESTREGEXP_CFLAGS) $(CPPDEPS) $<

mingw\testRelax_testRelax.o: ./../testRelax.c
	$(CC) -c -o $@ $(TESTRELAX_CFLAGS) $(CPPDEPS) $<

mingw\testSax_testSax.o: ./../testSax.c
	$(CC) -c -o $@ $(TESTSAX_CFLAGS) $(CPPDEPS) $<

mingw\testSchemas_testSchemas.o: ./../testSchemas.c
	$(CC) -c -o $@ $(TESTSCHEMAS_CFLAGS) $(CPPDEPS) $<

mingw\testURI_testURI.o: ./../testURI.c
	$(CC) -c -o $@ $(TESTURI_CFLAGS) $(CPPDEPS) $<

mingw\testXPath_testXPath.o: ./../testXPath.c
	$(CC) -c -o $@ $(TESTXPATH_CFLAGS) $(CPPDEPS) $<

mingw\xmllint_xmllint.o: ./../xmllint.c
	$(CC) -c -o $@ $(XMLLINT_CFLAGS) $(CPPDEPS) $<

.PHONY: all clean setupdirs libonly


# Dependencies tracking:
-include mingw/*.d
