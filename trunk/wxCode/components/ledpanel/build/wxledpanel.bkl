<?xml version="1.0" ?>

<!-- RCS-ID: $Id: mycomp.bkl,v 1.2 2007/03/04 08:57:20 frm Exp $ -->

<!--
    =========================================================================
    How to customize this file for a particular component.

    The bakefile system is designed to accomodate a component that has source and
    header files that are meant to be compiled into a library that users can link
    to as well as sample programs that will make use of the library.

    Directory structure : The dirs in brackets [] can be given any name.

    wxCode/component/MYCOMPONENT_NAME/
        include/[wx/MYCOMPONENT_NAME/]*.h  : Library header files
        src/*.cpp                          : Library source files
        samples/                           : Samples directory
            [mysample_name/]*.h;*.cpp
            [mysample_name2/]*.h;*.cpp
            [mysample_name3/]*.h;*.cpp
            [mysample_name4/]*.h;*.cpp

    1.) Replace the contents of the "set-comp-name" tag with the name of your
        component, eg. wxCode/component/MYCOMPONENT_NAME.
        Example : for wxCode/components/wxscintilla use just 'wxscintilla' with no
                  quotes.

    2.) Replace the name of the lib to be generated MYCOMPONENT_NAME_lib and
        MYCOMPONENT_NAME_dll with the actual name of your component,
        eg. wxscintilla_lib and wxscintilla_dll.

    3.) Adjust the MSVC6PRJ_MERGED_TARGETS variable with the same values
        you've set previously. eg. wxscintilla=wxscintilla_lib+wxscintilla_dll

    4.) Remove or add libs to link the library to. Use <wx-lib>name</wx-lib> for
        libraries from wxWidgets and they will appropriately pre and postfixed
        based on the build settings (eg. debug, unicode, etc.).
        Use <library>name</library> for other libraries declared into this bakefile,
        they will be used as is.
        Finally, use <sys-lib>name</sys-lib> for other libraries coming from 3rd party
        packages.
        Note that shared libraries (<dll>) need to link to other libraries, but static
        libraries (<lib>) do not.

    5.) Replace the MYSAMPLE_NAME with the name you want the compiled executable
        to have. Add or remove libraries and include paths as you did for the
        library.

    6.) Periodically check to see if the wxCode bakefiles have been updated,
        including the template empty.bkl.template that this is derived from
        and regenerate your build files.

    ==========================================================================
-->

<makefile>

    <include file="presets/wxcode.bkl"/>


    <!-- ================================================================= -->
    <!-- Settings for this component                                       -->
    <!-- ================================================================= -->

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        Sets the name of the folder which contains this component and thus
        should always be in lowercase, wxCode/component/MYCOMPONENT_NAME -->
    <set-comp-name>ledpanel</set-comp-name>


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Library settings                                                  -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

    <!-- NOTE: you won't need to specify a list of source and headers files
               for this component: wxcode.bkl (included above) will automatically
               look into the 'src' and 'include/wx' folders of your component to
               build such lists and set the COMP_SRC and COMP_HDR variables,
               which will then be used as sources / headers for the <lib> and <dll>
               targets below.

               In case however you don't have the sources/headers in those
               folders, you'll want to 'manually' set the list:

                <set var="COMP_SRC">$(fileList('my_src_dir/*.cpp'))</set>
                <set var="COMP_HDR">$(fileList('my_header_dir/*.h'))</set>

               NOTE2: the folders you reference are always referred to the root
                      of your component and must always be relative paths.
    -->

    <lib id="wxledpanel_lib" template="wxcode-lib" cond="WX_SHARED=='0'">
        <!-- Add any other include paths here and duplicate for the shared lib.
             The example below will have the compiler use the environment
             variable $(WXWIN) to specify the include path to the wxWidgets
             contrib includes -->
        <!-- <include>$(DOLLAR)(WXWIN)/contrib/include</include> -->
    </lib>
    <dll id="wxledpanel_dll" template="wxcode-dll" cond="WX_SHARED=='1'">
        <!-- Remove the libraries which are not required by your project.
             Note : the linking order may be important for static objects
                    to be initialized correctly and even more important for
                    some linkers like GNU's linker. -->
        <wx-lib>core</wx-lib>
        <wx-lib>base</wx-lib> <!-- base must be last wx-lib -->
    </dll>

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- This makes the MSVC6 project files much nicer... -->
    <set var="MSVC6PRJ_MERGED_TARGETS">
        wxLEDPanel=wxledpanel_lib+wxledpanel_dll
    </set>

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Sample(s) settings                                                -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

    <!-- For wxCode samples, don't use a simple <exe> tag but rather the more
         specific <wxcode-sample> tag: -->

    <wxcode-sample id="wxLEDPanel_Sampel">
        <!-- Inside a <wxcode-sample> tag you _must_ use the <dir> tag
             to tell Bakefile in which directory is placed this sample.

             NOTE: the directory you reference must be relative to the root
                   of your component. In the sample <dir> below we assume
                   you have placed this sample's files in
                      yourCompFolder/samples/sample1
        -->
        <dir>samples</dir>

        <!-- if you use win32 resources for your sample and you are lazy and
             don't want to use the <win32-res>myresfile.rc</win32-res> tag,
             you can just write:
        -->
        <has-win32-res/>

        <!-- Remove the libraries which are not required by your project.
             Note : the linking order may by important for static objects
             to be initialized correctly. -->
        <library>wxledpanel_lib</library>
        <wx-lib>core</wx-lib>
        <wx-lib>base</wx-lib> <!-- base must be last wx-lib -->
    </wxcode-sample>

</makefile>
