<!-- 
// Name:        webupdate.dtd
// Purpose:     a simple DTD to validate update script
// Author:      Francesco Montorsi
// Created:     2005/06/24
// RCS-ID:      $Id$
// Copyright:   (c) 2005 Francesco Montorsi
// Licence:     wxWidgets licence

   This Document Type Definition (DTD) is for the update scripts that you put
   in your webserver. This file should make easier to check validity of the
   scripts you write and also as a simple reference guide for the update script
   format.
-->

<!-- 
     A minimal example of a simple update script files:
	 
	 <?xml version="1.0"?>
	 <webupdate>
		<package id="myapp">
			<latest-version>2.0.3</latest-version>
			<latest-download platform="msw">http://myapp.com/download/myapp.exe</latest-download>
			<latest-download platform="gtk">http://myapp.com/download/myapp.rpm</latest-download>
		</package>
	 </webupdate>

	 
	 
	 A sample showing _all_ the available tags in action:
	 
	 <?xml version="1.0"?>
	 <webupdate>
	    <requires></requires>
	 
		<package id="myapp">
			<latest-version importance="high">2.0.3</latest-version>
			<latest-download platform="msw" md5="42e898d5f7d5bc1b359c80f02706d01e">http://myapp.com/download/myapp.exe</latest-download>
			<latest-download platform="gtk">http://myapp.com/download/myapp.rpm</latest-download>

			<msg-update-available>The new $(id) $(latest-version) is available for download;
								it has several bugfixes and security improvements !</msg-update-available>
			<msg-update-notavailable>You have the most updated version of $(id)...</msg-update-notavailable>

		</package>
	 </webupdate>
	 
-->


<!-- WEBUPDATE tag: this is the root of the script file.
                    It can contain:	                
					- 0 or more occurrences of the PACKAGE tag
-->
<!ELEMENT webupdate (package*)>




<!--                                                                                -->
<!--                        CHILDREN TAGS OF 'WEBUPDATE'                            -->
<!--                                                                                -->


<!-- PACKAGE tag: this begins a new package section where
                  are provided all the info about new updates
				  about it. Requires an "id" attribute (unique)
				  and the 
				  - latest-version
				  - latest-download
				  tags
-->
<!ELEMENT package (latest-version, requires?, latest-download*, msg-update-available?, msg-update-notavailable?)>
<!ATTLIST package id ID #REQUIRED>





<!--                                                                                -->
<!--                        CHILDREN TAGS OF 'PACKAGE'                              -->
<!--                                                                                -->

<!-- REQUIRES tag: lists the packages required for the installation of this package.
                   The list must be comma-separed and the names of the packages referenced
				   must be declared somewhere in the web update script.
-->
<!ELEMENT requires (#PCDATA)>



<!-- LATEST-VERSION tag: contains the version string of the most updated version
                         available in the webserver.
						 You can use the 'importance' attribute to define how much
						 important is this update...
-->
<!ELEMENT latest-version (#PCDATA)>
<!ATTLIST latest-version importance (low|normal|high) "normal">



<!-- MSG-UPDATE-AVAILABLE tag: contains a text message which is displayed to the user in case
                               a new version of the package is available for its platform. 
							   Keyword substitution is performed in the text.
-->
<!ELEMENT msg-update-available (#PCDATA)>


<!-- MSG-UPDATE-NOTAVAILABLE tag: contains a text message which is displayed to the user in case
                                 a new version of the package is NOT available for its platform. 
							     Keyword substitution is performed in the text.
-->
<!ELEMENT msg-update-notavailable (#PCDATA)>


<!-- LATEST-DOWNLOAD tag: must contain the URI tag with the download location of the most updated
                          file available in the webserver. Requires a "platform" subtag
						  which specifies the platform targeted by this download.
						  The "md5" subtag can be optionally used to specify a MD5 checksum.
						  At least one "action" tag must be present to specify the action to
						  take at the end of the download.
						  
-->
<!ELEMENT latest-download (uri, platform, md5?, action+)>




<!--                                                                                -->
<!--                     CHILDREN TAGS OF 'LATEST-DOWNLOAD'                         -->
<!--                                                                                -->

<!-- PLATFORM tag: contains the platform code for the platform which is targeted
                   by the current download.
-->
<!ELEMENT platform EMPTY>
<!ATTLIST platform name (msw|gtk|mac|x11|motif|mgl|os2|any) "any">



<!-- UDRI tag: specified the URI of the current download.
-->
<!ELEMENT uri (#PCDATA)>


<!-- MD5 tag: allows the webupdate XML script writer to specify a MD5 file checksym for
              this download.
-->
<!ELEMENT md5 (#PCDATA)>


<!-- ACTION tag: allows to specify an action to take when the download is complete.
                 There are some built-in action handlers for "run", "extract", "exit"...
				 
                 'run' means that the downloaded file will simply be run through the
				 OS shell.
				 'extract' means that the downloaded file will be extracted
				 
				 
-->
<!ELEMENT action (#PCDATA)>


<!-- for "extract" action tags -->
<!ATTLIST action where CDATA "$(PROGRAMROOT)">

<!-- for "run" action tags -->
<!ATTLIST action args CDATA #IMPLIED>
<!ATTLIST action file CDATA #IMPLIED>
<!ATTLIST action flags CDATA "ASYNCH">

<!-- add the attributes for you own actions here -->
