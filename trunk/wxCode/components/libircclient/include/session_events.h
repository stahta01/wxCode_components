/**
 * @file session_events.h
 * 	
 * This file is part of XVIRC.
 * 
 * @author foldink (foldink@gmail.com)
 * @date 07-February-2010
 * @version 0.0.1
 */
#ifndef __IRCSessionEvents__
#define __IRCSessionEvents__

#include <wx/event.h>

#include "defs.h"

/** xvirc imports */
class IRCSession;

/**
 * @class IRCSessionEvent
 * @brief This is the event class for managing information about events in session
 * 
 * @author foldink (foldink@gmail.com)
 * @date 07-February-2010
 * @version 0.0.1
 */
class WXDLLIMPEXP_LIBIRCLIENT IRCSessionEvent : public wxThreadEvent
{
public :
	
	/**
	 * Default constructor,
	 * @param commandType type of event this events is 
	 * @param id event id fot generation
	 * @param session session concerned by the event
	 */
	IRCSessionEvent(wxEventType commandType = wxEVT_NULL, int id = 0, 
				IRCSession* session = 0L )
				: wxThreadEvent(commandType, id),
				m_session(session),
				m_X(0),
				m_Y(0),
				m_count(0)
	{}

	/** 
	 * Copy constructor
	 * This one is needed by wxWidgets events system
	 */
    IRCSessionEvent(const IRCSessionEvent& event)
				: wxThreadEvent(event),
				m_session(event.m_session),
				m_X(event.m_X),
				m_Y(event.m_Y),
				m_count(event.m_count),
				m_origin(event.m_origin),
				m_params(event.m_params)
	{}
	
	/** 
	 * Clone method, this one is requested too...
	 */
    virtual wxEvent *Clone() const { return new IRCSessionEvent(*this); }
	
	/** Get the session concerned by this event */
    IRCSession* GetSession() const { return m_session; }
	
	/** Set the session concerned by this event */
    void SetSession(IRCSession* session) { m_session = session; }

	/** Get the mouse position if one */
    int GetX() const { return m_X; }
	
	/** Set the mouse position if one */
    void SetX(int x) { m_X = x; }

	/** Get the mouse position if one */
    int GetY() const { return m_Y; }
	
	/** Set the mouse position if one */
    void SetY(int y) { m_Y = y; }
	
	/** Get the count value generated by libircclient events */
	int GetCount() const {return m_count;};
	
	/** Set the count value generated by libircclient events */
	void SetCount( int count ) { m_count = count; };
	
	/** Get the origin string generated by libircclient */
	const wxString& GetOrigin() const {return m_origin;};
	
	/** Set the origin string generated by libircclient */
	void SetOrigin( const wxString& origin ) {m_origin = origin;};
	
	/** Get the params string generated byt the libircclient event */
	const wxArrayString& GetParams() const { return m_params; };
	
	/** Set the params string generated byt the libircclient event */
	void SetParams( const wxArrayString& params ) {m_params = params;};

protected:

    IRCSession* m_session;

    int m_X;
    int m_Y;
	
	int m_count;
	wxString m_origin;
	wxArrayString m_params;

private:
    DECLARE_DYNAMIC_CLASS(IRCSessionEvent)
};

/** define an event function pointer for wxWidgets defines */
typedef void (wxEvtHandler::*IRCSessionEventFunction)(IRCSessionEvent&);

#define IRCSessionEventHandler(func) \
    (wxObjectEventFunction)(wxEventFunction)wxStaticCastEvent(IRCSessionEventFunction, &func)

/**********************************************************************************************
 * SESSION EVENTS
**********************************************************************************************/
extern const wxEventType wxEVT_THREAD_IRC_CONNECT;
#define EVT_THREAD_IRC_CONNECT(fn) DECLARE_EVENT_TABLE_ENTRY( wxEVT_THREAD_IRC_CONNECT, -1, -1, (wxObjectEventFunction)(wxEventFunction)(IRCSessionEventFunction)&fn, (wxObject *) NULL ),

extern const wxEventType wxEVT_THREAD_IRC_NICK;
#define EVT_THREAD_IRC_NICK(fn) DECLARE_EVENT_TABLE_ENTRY( wxEVT_THREAD_IRC_NICK, -1, -1, (wxObjectEventFunction)(wxEventFunction)(IRCSessionEventFunction)&fn, (wxObject *) NULL ),

extern const wxEventType wxEVT_THREAD_IRC_QUIT;
#define EVT_THREAD_IRC_QUIT(fn) DECLARE_EVENT_TABLE_ENTRY( wxEVT_THREAD_IRC_QUIT, -1, -1, (wxObjectEventFunction)(wxEventFunction)(IRCSessionEventFunction)&fn, (wxObject *) NULL ),

extern const wxEventType wxEVT_THREAD_IRC_JOIN;
#define EVT_THREAD_IRC_JOIN(fn) DECLARE_EVENT_TABLE_ENTRY( wxEVT_THREAD_IRC_JOIN, -1, -1, (wxObjectEventFunction)(wxEventFunction)(IRCSessionEventFunction)&fn, (wxObject *) NULL ),

extern const wxEventType wxEVT_THREAD_IRC_PART;
#define EVT_THREAD_IRC_PART(fn) DECLARE_EVENT_TABLE_ENTRY( wxEVT_THREAD_IRC_PART, -1, -1, (wxObjectEventFunction)(wxEventFunction)(IRCSessionEventFunction)&fn, (wxObject *) NULL ),

extern const wxEventType wxEVT_THREAD_IRC_MODE;
#define EVT_THREAD_IRC_MODE(fn) DECLARE_EVENT_TABLE_ENTRY( wxEVT_THREAD_IRC_MODE, -1, -1, (wxObjectEventFunction)(wxEventFunction)(IRCSessionEventFunction)&fn, (wxObject *) NULL ),

extern const wxEventType wxEVT_THREAD_IRC_U_MODE;
#define EVT_THREAD_IRC_U_MODE(fn) DECLARE_EVENT_TABLE_ENTRY( wxEVT_THREAD_IRC_U_MODE, -1, -1, (wxObjectEventFunction)(wxEventFunction)(IRCSessionEventFunction)&fn, (wxObject *) NULL ),

extern const wxEventType wxEVT_THREAD_IRC_TOPIC;
#define EVT_THREAD_IRC_TOPIC(fn) DECLARE_EVENT_TABLE_ENTRY( wxEVT_THREAD_IRC_TOPIC, -1, -1, (wxObjectEventFunction)(wxEventFunction)(IRCSessionEventFunction)&fn, (wxObject *) NULL ),

extern const wxEventType wxEVT_THREAD_IRC_KICK;
#define EVT_THREAD_IRC_KICK(fn) DECLARE_EVENT_TABLE_ENTRY( wxEVT_THREAD_IRC_KICK, -1, -1, (wxObjectEventFunction)(wxEventFunction)(IRCSessionEventFunction)&fn, (wxObject *) NULL ),

extern const wxEventType wxEVT_THREAD_IRC_CHANMSG;
#define EVT_THREAD_IRC_CHANMSG(fn) DECLARE_EVENT_TABLE_ENTRY( wxEVT_THREAD_IRC_CHANMSG, -1, -1, (wxObjectEventFunction)(wxEventFunction)(IRCSessionEventFunction)&fn, (wxObject *) NULL ),

extern const wxEventType wxEVT_THREAD_IRC_PRIVMSG;
#define EVT_THREAD_IRC_PRIVMSG(fn) DECLARE_EVENT_TABLE_ENTRY( wxEVT_THREAD_IRC_PRIVMSG, -1, -1, (wxObjectEventFunction)(wxEventFunction)(IRCSessionEventFunction)&fn, (wxObject *) NULL ),

extern const wxEventType wxEVT_THREAD_IRC_NOTICE;
#define EVT_THREAD_IRC_NOTICE(fn) DECLARE_EVENT_TABLE_ENTRY( wxEVT_THREAD_IRC_NOTICE, -1, -1, (wxObjectEventFunction)(wxEventFunction)(IRCSessionEventFunction)&fn, (wxObject *) NULL ),

extern const wxEventType wxEVT_THREAD_IRC_CHAN_NOTICE;
#define EVT_THREAD_IRC_CHAN_NOTICE(fn) DECLARE_EVENT_TABLE_ENTRY( wxEVT_THREAD_IRC_CHAN_NOTICE, -1, -1, (wxObjectEventFunction)(wxEventFunction)(IRCSessionEventFunction)&fn, (wxObject *) NULL ),

extern const wxEventType wxEVT_THREAD_IRC_INVITE;
#define EVT_THREAD_IRC_INVITE(fn) DECLARE_EVENT_TABLE_ENTRY( wxEVT_THREAD_IRC_INVITE, -1, -1, (wxObjectEventFunction)(wxEventFunction)(IRCSessionEventFunction)&fn, (wxObject *) NULL ),

extern const wxEventType wxEVT_THREAD_IRC_CTCPREP;
#define EVT_THREAD_IRC_CTCPREP(fn) DECLARE_EVENT_TABLE_ENTRY( wxEVT_THREAD_IRC_CTCPREP, -1, -1, (wxObjectEventFunction)(wxEventFunction)(IRCSessionEventFunction)&fn, (wxObject *) NULL ),

extern const wxEventType wxEVT_THREAD_IRC_CTCPREQ;
#define EVT_THREAD_IRC_CTCPREQ(fn) DECLARE_EVENT_TABLE_ENTRY( wxEVT_THREAD_IRC_CTCPREQ, -1, -1, (wxObjectEventFunction)(wxEventFunction)(IRCSessionEventFunction)&fn, (wxObject *) NULL ),

extern const wxEventType wxEVT_THREAD_IRC_CTCPACT;
#define EVT_THREAD_IRC_CTCPACT(fn) DECLARE_EVENT_TABLE_ENTRY( wxEVT_THREAD_IRC_CTCPACT, -1, -1, (wxObjectEventFunction)(wxEventFunction)(IRCSessionEventFunction)&fn, (wxObject *) NULL ),

extern const wxEventType wxEVT_THREAD_IRC_UNKNOWN;
#define EVT_THREAD_IRC_UNKNOWN(fn) DECLARE_EVENT_TABLE_ENTRY( wxEVT_THREAD_IRC_UNKNOWN, -1, -1, (wxObjectEventFunction)(wxEventFunction)(IRCSessionEventFunction)&fn, (wxObject *) NULL ),

extern const wxEventType wxEVT_THREAD_IRC_NUMERIC;
#define EVT_THREAD_IRC_NUMERIC(fn) DECLARE_EVENT_TABLE_ENTRY( wxEVT_THREAD_IRC_NUMERIC, -1, -1, (wxObjectEventFunction)(wxEventFunction)(IRCSessionEventFunction)&fn, (wxObject *) NULL ),

extern const wxEventType wxEVT_THREAD_IRC_DCCCHAT;
#define EVT_THREAD_IRC_DCCCHAT(fn) DECLARE_EVENT_TABLE_ENTRY( wxEVT_THREAD_IRC_DCCCHAT, -1, -1, (wxObjectEventFunction)(wxEventFunction)(IRCSessionEventFunction)&fn, (wxObject *) NULL ),

extern const wxEventType wxEVT_THREAD_IRC_DCCSEND;
#define EVT_THREAD_IRC_DCCSEND(fn) DECLARE_EVENT_TABLE_ENTRY( wxEVT_THREAD_IRC_DCCSEND, -1, -1, (wxObjectEventFunction)(wxEventFunction)(IRCSessionEventFunction)&fn, (wxObject *) NULL ),

#endif
