//------------------------------------------------------------------------------
// Source code generated by wxDesigner from file: wxvidcap.wdr
// Do not modify this file, all changes will be lost!
//------------------------------------------------------------------------------

// For compilers that support precompilation
#include "wx/wxprec.h"

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

// Include private header
#include "wxvidcap_wdr.h"


// Implement window functions

// Implement menubar functions

// Implement toolbar functions

// Implement bitmap functions

wxBitmap ToolBarBitmaps( size_t index )
{
    if (index == 0)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 15 16 1",
        "  c None",
        "a c Black",
        "b c #4D4D4D",
        "c c #434343",
        "d c #393939",
        "e c #C0C0C0",
        "f c #555555",
        "g c #4B4B4B",
        "h c #5E5E5E",
        "i c #717171",
        "j c #C7C7C7",
        "k c #828282",
        "l c #656565",
        "m c #8A8A8A",
        "n c #767676",
        "p c #616161",
        /* pixels */
        "    a      a    ",
        "     a    a     ",
        "      a  a      ",
        "       aa       ",
        "   aaaaaaaaaa   ",
        "  aeeeeeeeeeea  ",
        "  aeaaaaaaaaea  ",
        "  aeajmnbaaaea  ",
        "  aeamkigaaaea  ",
        "  aeanilcaaaea  ",
        "  aeaphfdaaaea  ",
        "  aeaaaaaaaaea  ",
        "  aeaaaaaaaaea  ",
        "  aeeeeeeeeeea  ",
        "   aaaaaaaaaa   "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 1)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 15 5 1",
        "  c None",
        "a c Black",
        "b c #A52A2A",
        "c c #0000FF",
        "d c #FFFFFF",
        /* pixels */
        "                ",
        "aaaaaaaaaaaaaaaa",
        "acccccccccccccca",
        "aaaaaaaaaaaaaaaa",
        "adddddddddddddda",
        "adbbbddddddbbbda",
        "adbbddddddddbbda",
        "adbdbddddddbdbda",
        "addddbddddbdddda",
        "addddbddddbdddda",
        "adbdbddddddbdbda",
        "adbbddddddddbbda",
        "adbbbddddddbbbda",
        "adddddddddddddda",
        "aaaaaaaaaaaaaaaa"
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 2)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 15 5 1",
        "  c None",
        "a c Black",
        "b c #A52A2A",
        "c c #0000FF",
        "d c #FFFFFF",
        /* pixels */
        "                ",
        "aaaaaaaaaaaaaaaa",
        "acccccccccccccca",
        "aaaaaaaaaaaaaaaa",
        "abddddddddddddba",
        "adbdbddddddbdbda",
        "addbbddddddbbdda",
        "adbbbddddddbbbda",
        "adddddddddddddda",
        "adddddddddddddda",
        "adbbbddddddbbbda",
        "addbbddddddbbdda",
        "adbdbddddddbdbda",
        "abddddddddddddba",
        "aaaaaaaaaaaaaaaa"
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 3)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 15 6 1",
        "  c None",
        "a c Black",
        "b c #AD721F",
        "c c #C0C0C0",
        "d c #9C5D13",
        "e c #FFFFFF",
        /* pixels */
        "  bbbaeeecabbb  ",
        " abddaecccaddba ",
        " abdeeaaaaeedba ",
        " abdeeeeeeeedba ",
        " abdeeeeeeeedba ",
        " abdeeeeeeeedba ",
        " abdeeeeeeeedba ",
        " abdeeeeeeeedba ",
        " abdeeeeeeeedba ",
        " abdeeeeeeeedba ",
        " abdeeeeeeeedba ",
        " abdeeeeeeeedba ",
        " abddddddddddba ",
        " abbbbbbbbbbbba ",
        "  aaaaaaaaaaaa  "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 4)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 15 6 1",
        "  c None",
        "a c Black",
        "b c #FF0000",
        "c c #C0C0C0",
        "d c #FFFFFF",
        "e c #808080",
        /* pixels */
        "    aaaaaaaaa   ",
        "    addddddaea  ",
        "    addddddadea ",
        "   eaaaedddaddea",
        " a acdcadadaaaaa",
        " aaaaaaaaaddeeea",
        "addcaaacbdadddda",
        "adcaeceacdadddda",
        "acaedceeacadddda",
        "acaecceeacadddda",
        "accaceeaccadddda",
        "acceaeaeccadddda",
        " aaaaaaaaaddddda",
        "    adddddddddda",
        "    aaaaaaaaaaaa"
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 5)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 15 10 1",
        "  c None",
        "a c Black",
        "b c #C0C0C0",
        "c c #D8C663",
        "d c #CEB958",
        "e c #9F9F5F",
        "f c #FFFFFF",
        "g c #D3BE5C",
        "h c #808080",
        "j c #D0BB5B",
        /* pixels */
        "gaaaaaaaaaaaa   ",
        "ggafaffffffaha  ",
        "gggaaafffffafha ",
        "gggeafaffffaffha",
        "ggeagaaafffaaaaa",
        "geagggafafffhhha",
        "eagggggaaafffffa",
        "aegggggeafaffffa",
        "faegggeagaaafffa",
        "aaaegeagcgafaffa",
        " afaeagggggaaafa",
        "  aaaegggggeafaa",
        "   afaegggeadaaa",
        "    abaejeagggaa",
        "    aaaaaaaaaaaa"
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 6)
    {
        static const unsigned char data[] =
        {
            214,214,214,214,214,214,214,214,214,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,214,214,214,214,214,214,214,214,214,214,214,
            214,214,214,214,214,214,214,0,0,0,255,255,255,255,255,255,192,192,192,192,192,192,255,255,255,
            255,255,255,255,255,255,0,0,0,128,128,128,0,0,0,214,214,214,214,214,214,214,214,214,214,
            214,214,214,214,214,34,34,34,84,84,84,115,115,115,121,121,121,101,101,101,60,60,60,8,8,
            8,255,255,255,0,0,0,255,255,255,128,128,128,0,0,0,214,214,214,214,214,214,214,214,214,
            74,74,74,140,140,140,146,146,146,103,103,103,80,80,80,132,132,132,145,145,145,117,117,117,26,
            26,26,0,0,0,255,255,255,255,255,255,128,128,128,0,0,0,214,214,214,68,68,68,147,147,
            147,143,143,143,109,109,109,0,0,0,0,0,0,47,47,47,141,141,141,143,143,143,124,124,124,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,21,139,139,139,152,152,152,158,
            158,158,115,115,115,0,0,0,0,0,0,45,45,45,152,152,152,146,146,146,151,151,151,82,82,
            82,255,255,255,128,128,128,128,128,128,0,0,0,70,70,70,160,160,160,95,95,95,79,79,79,
            146,146,146,109,109,109,82,82,82,141,141,141,104,104,104,60,60,60,122,122,122,132,132,132,128,
            128,128,255,255,255,255,255,255,0,0,0,105,105,105,116,116,116,0,0,0,0,0,0,73,73,
            73,177,177,177,181,181,181,143,143,143,5,5,5,0,0,0,28,28,28,147,147,147,28,28,28,
            255,255,255,255,255,255,0,0,0,109,109,109,119,119,119,0,0,0,0,0,0,80,80,80,187,
            187,187,190,190,190,156,156,156,20,20,20,0,0,0,38,38,38,153,153,153,29,29,29,255,255,
            255,255,255,255,0,0,0,80,80,80,178,178,178,107,107,107,93,93,93,167,167,167,120,120,120,
            88,88,88,158,158,158,143,143,143,97,97,97,146,146,146,146,146,146,128,128,128,255,255,255,255,
            255,255,0,0,0,27,27,27,173,173,173,186,186,186,194,194,194,141,141,141,0,0,0,0,0,
            0,56,56,56,183,183,183,178,178,178,181,181,181,101,101,101,255,255,255,255,255,255,255,255,255,
            0,0,0,192,192,192,96,96,96,199,199,199,194,194,194,145,145,145,0,0,0,0,0,0,60,
            60,60,186,186,186,185,185,185,161,161,161,21,21,21,255,255,255,255,255,255,255,255,255,0,0,
            0,214,214,214,2,2,2,110,110,110,199,199,199,206,206,206,136,136,136,101,101,101,178,178,178,
            205,205,205,163,163,163,39,39,39,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,214,
            214,214,214,214,214,128,128,128,56,56,56,135,135,135,178,178,178,187,187,187,157,157,157,95,95,
            95,14,14,14,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,214,214,214,
            214,214,214,214,214,214,214,214,214,0,0,0,5,5,5,10,10,10,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        };
        wxImage image( 16, 15, (unsigned char*)data, TRUE );
        image.SetMaskColour( 214, 214, 214);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 7)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 15 4 1",
        "  c None",
        "a c Black",
        "b c #808000",
        "c c #808080",
        /* pixels */
        "                ",
        " aaaaaaaaaaaaaa ",
        " aba        a a ",
        " aba        aaa ",
        " aba        aba ",
        " aba        aba ",
        " aba        aba ",
        " aba        aba ",
        " abbaaaaaaaacba ",
        " abbbbbbbbbbbba ",
        " abbaaaaaaaaaba ",
        " abbaaaaaa  aba ",
        " abbaaaaaa  aba ",
        " abbaaaaaa  aba ",
        "  aaaaaaaaaaaaa "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 8)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 15 5 1",
        "  c None",
        "a c Black",
        "b c #FF0000",
        "c c #FFFFFF",
        "d c #808080",
        /* pixels */
        "                ",
        " aaaaaaaaaaaaa  ",
        " adddddddddddad ",
        " adccccccccccad ",
        " adcccccccbbcad ",
        " adccccccbbbcad ",
        " adcccccbbbccad ",
        " adbbccbbbcccad ",
        " adbbcbbbccccad ",
        " adcbbbbcccccad ",
        " adcbbbccccccad ",
        " adccbcccccccad ",
        " aaaaaaaaaaaaad ",
        "  ddddddddddddd ",
        "                "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    return wxNullBitmap;
}


// End of generated file
