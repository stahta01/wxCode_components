////////////////////////////////////////////////////////////////////////////
// Name:        msw/spinreal.h
// Purpose:     wxSpinReal class declaration for Win32
// Author:      Vadim Zeitlin
// Modified by:
// Created:     22.07.99
// RCS-ID:      $Id: spinrealm.h,v 1.1.1.1 2003-12-28 21:05:22 wyo Exp $
// Copyright:   (c) Vadim Zeitlin
// Licence:     wxWindows licence
/////////////////////////////////////////////////////////////////////////////

#ifndef _WX_MSW_SPINREAL_H_
#define _WX_MSW_SPINREAL_H_

#ifdef __GNUG__
    #pragma interface "spinreal.h"
#endif

#include "wx/spinbutt.h"    // the base class

#include "wx/dynarray.h"
class WXDLLEXPORT wxSpinReal;
WX_DEFINE_EXPORTED_ARRAY(wxSpinReal *, wxArraySpinReals);

// ----------------------------------------------------------------------------
// Under Win32, wxSpinReal is a wxSpinButton with a buddy (as MSDN docs call
// it) text window whose contents is automatically updated when the spin
// control is clicked.
// ----------------------------------------------------------------------------

class WXDLLEXPORT wxSpinReal : public wxSpinButton
{
public:
    wxSpinReal() { }

    wxSpinReal(wxWindow *parent,
               wxWindowID id = -1,
               const wxString& value = wxEmptyString,
               const wxPoint& pos = wxDefaultPosition,
               const wxSize& size = wxDefaultSize,
               long style = wxSP_ARROW_KEYS,
               float min = 0.0, float max = 100.0,
               float initial = 0.0,
               float increment = 0.1, int digits = -1,
               const wxString& name = _T("wxSpinReal"))
    {
        Create(parent, id, value, pos, size, style,
               min, max, initial, increment, digits, name);
    }

    bool Create(wxWindow *parent,
                wxWindowID id = -1,
                const wxString& value = wxEmptyString,
                const wxPoint& pos = wxDefaultPosition,
                const wxSize& size = wxDefaultSize,
                long style = wxSP_ARROW_KEYS,
                float min = 0.0, float max = 100.0,
                float initial = 0.0,
                float increment = 0.1, int digits = -1,
                const wxString& name = _T("wxSpinReal"));

    // a wxTextCtrl-like method (but we can't have GetValue returning wxString
    // because the base class already has one returning int!)
    void SetValue(const wxString& text);

    // implementation only from now on
    // -------------------------------

    virtual ~wxSpinReal();

    virtual void SetValue(float value);
    virtual void SetRange(float minVal, float maxVal);
    virtual void SetIncrement(float increment, int digits = -1); // digits -1 is autodetect
    virtual void SetSnap(bool snap_to_increment);
    virtual float GetValue();
    virtual float GetMin() { return m_min;} //m_min; }
    virtual float GetMax() { return m_max;} // m_max; }
    virtual float GetIncrement() const { return m_increment; }
    virtual int GetDigits() const { return m_digits; }
    virtual bool GetSnap() const { return m_snap; }


//    virtual void SetValue(int val) { wxSpinButton::SetValue(val); }
//    virtual int  GetValue() const;
    virtual bool SetFont(const wxFont &font);
    virtual void SetFocus();

    virtual bool Enable(bool enable = TRUE);
    virtual bool Show(bool show = TRUE);

    // wxSpinButton doesn't accept focus, but we do
    virtual bool AcceptsFocus() const { return wxWindow::AcceptsFocus(); }

    // for internal use only

    // get the subclassed window proc of the buddy text
    WXFARPROC GetBuddyWndProc() const { return m_wndProcBuddy; }

    // return the spinreal object whose buddy is the given window or NULL
    static wxSpinReal *GetSpinForTextCtrl(WXHWND hwndBuddy);

    // process a WM_COMMAND generated by the buddy text control
    bool ProcessTextCommand(WXWORD cmd, WXWORD id);

protected:
    virtual void DoGetPosition(int *x, int *y) const;
    virtual void DoMoveWindow(int x, int y, int width, int height);
    virtual wxSize DoGetBestSize() const;
    virtual void DoGetSize(int *width, int *height) const;

    // the handler for wxSpinButton events
    void OnSpinChange(wxSpinEvent& event);
    void OnSpinUp(wxSpinEvent& event);
    void OnSpinDown(wxSpinEvent& event);

    // Handle processing of special keys
    void OnChar(wxKeyEvent& event);
    void OnKey(wxKeyEvent& event);

    // the data for the "buddy" text ctrl
    WXHWND     m_hwndBuddy;
    WXFARPROC  m_wndProcBuddy;

    // all existing wxSpinReals - this allows to find the one corresponding to
    // the given buddy window in GetSpinForTextCtrl()
    static wxArraySpinReals ms_allSpins;

private:
// for some bizarre reason these must be last??!!??
    double m_value;
    float m_max;
    float m_min;
    float m_increment;
    float m_modifier;      // for shift,ctrl,alt accelerators
    int m_digits;          // # of digits to show
    bool m_snap;           // snap to increment
    wxString m_textformat; // print format for textctrl, ie. %.3f

private:
    DECLARE_DYNAMIC_CLASS(wxSpinReal)
    DECLARE_EVENT_TABLE()
};

#endif // _WX_MSW_SPINREAL_H_


