# =========================================================================
#     This makefile was generated by
#     Bakefile 0.1.4 (http://bakefile.sourceforge.net)
#     Do not modify, all changes will be overwritten!
# =========================================================================



# -------------------------------------------------------------------------
# These are configurable options:
# -------------------------------------------------------------------------

# C++ compiler 
CXX = wpp386

# Standard flags for C++ 
CXXFLAGS = 

# Standard preprocessor flags (common for CC and CXX) 
CPPFLAGS = 

# Standard linker flags 
LDFLAGS = 

# If 0 Python won't be used [0,1]
USE_PYTHON = 1

# If 0 LUA won't be used [0,1]
USE_LUA = 1

# If 0 CINT won't be used [0,1]
USE_CINT = 0

# If 0 UnderC won't be used [0,1]
USE_UNDERC = 0

# The Python library main folder 
PYTHON_DIR = c:\Python

# The LUA library main folder 
LUA_DIR = c:\lua

# The TOLUA library main folder 
TOLUA_DIR = c:\tolua

# The CINT library main folder 
CINT_DIR = c:\cint

# The UnderC library main folder 
UNDERC_DIR = c:\ucc

# Compile Unicode build of wxWindows? [0,1]
UNICODE = 0

# Type of compiled binaries [debug,release]
BUILD = debug

# The wxWidgets library main folder 
WXWIN = c:\wxWidgets



# -------------------------------------------------------------------------
# Do not modify the rest of this file!
# -------------------------------------------------------------------------

# Speed up compilation a bit:
!ifdef __LOADDLL__
!  loaddll wcc      wccd
!  loaddll wccaxp   wccdaxp
!  loaddll wcc386   wccd386
!  loaddll wpp      wppdi86
!  loaddll wppaxp   wppdaxp
!  loaddll wpp386   wppd386
!  loaddll wlink    wlink
!  loaddll wlib     wlibd
!endif

# We need these variables in some bakefile-made rules:
WATCOM_CWD = $+ $(%cdrive):$(%cwd) $-

### Conditionally set variables: ###

WXSUBLIBPOSTFIX =
!ifeq BUILD debug
!ifeq UNICODE 0
WXSUBLIBPOSTFIX = d
!endif
!endif
PYTHONLIB_POSTFIX =
!ifeq BUILD debug
PYTHONLIB_POSTFIX = _d
!endif
SCRIPTINCLUDE1 =
!ifeq USE_PYTHON 1
SCRIPTINCLUDE1 = -i=$(PYTHON_DIR)\include
!endif
SCRIPTINCLUDE2 =
!ifeq USE_LUA 1
SCRIPTINCLUDE2 = -i=$(LUA_DIR)\include -i=$(TOLUA_DIR)\include
!endif
SCRIPTINCLUDE3 =
!ifeq USE_CINT 1
SCRIPTINCLUDE3 = -i=$(CINT_DIR)
!endif
SCRIPTINCLUDE4 =
!ifeq USE_UNDERC 1
SCRIPTINCLUDE4 = -i=$(UNDERC_DIR)
!endif
SCRIPTLIBPATH1 =
!ifeq USE_PYTHON 1
SCRIPTLIBPATH1 = libpath $(PYTHON_DIR)\libs
!endif
SCRIPTLIBPATH2 =
!ifeq USE_LUA 1
SCRIPTLIBPATH2 = libpath $(LUA_DIR)\lib libpath $(TOLUA_DIR)\lib
!endif
SCRIPTLIBPATH3 =
!ifeq USE_CINT 1
SCRIPTLIBPATH3 = libpath $(CINT_DIR)\lib
!endif
SCRIPTLIBPATH4 =
!ifeq USE_UNDERC 1
SCRIPTLIBPATH4 = libpath $(UNDERC_DIR)\lib
!endif
SCRIPTDEFINE1 =
!ifeq USE_PYTHON 0
SCRIPTDEFINE1 = -dwxSCRIPT_NO_PYTHON
!endif
SCRIPTDEFINE2 =
!ifeq USE_LUA 0
SCRIPTDEFINE2 = -dwxSCRIPT_NO_LUA
!endif
SCRIPTDEFINE3 =
!ifeq USE_CINT 0
SCRIPTDEFINE3 = -dwxSCRIPT_NO_CINT
!endif
SCRIPTDEFINE4 =
!ifeq USE_UNDERC 0
SCRIPTDEFINE4 = -dwxSCRIPT_NO_UNDERC
!endif
__WARNINGS =
!ifeq BUILD debug
__WARNINGS = -wx
!endif
!ifeq BUILD release
__WARNINGS = 
!endif
__UNICODE_DEFINE_p =
!ifeq UNICODE 1
__UNICODE_DEFINE_p = -d_UNICODE
!endif
__OPTIMIZEFLAG =
!ifeq BUILD debug
__OPTIMIZEFLAG = -od
!endif
!ifeq BUILD release
__OPTIMIZEFLAG = -ot -ox
!endif
__DEBUGINFO =
!ifeq BUILD debug
__DEBUGINFO = -d2
!endif
!ifeq BUILD release
__DEBUGINFO = -d0
!endif
__DEBUGINFO_0 =
!ifeq BUILD debug
__DEBUGINFO_0 = debug all
!endif
!ifeq BUILD release
__DEBUGINFO_0 = 
!endif
WXLIBPOSTFIX =
!ifeq BUILD debug
!ifeq UNICODE 0
WXLIBPOSTFIX = d
!endif
!endif
!ifeq BUILD debug
!ifeq UNICODE 1
WXLIBPOSTFIX = ud
!endif
!endif
!ifeq BUILD release
!ifeq UNICODE 1
WXLIBPOSTFIX = u
!endif
!endif
__SCRIPTLIB1_p =
!ifeq USE_PYTHON 1
__SCRIPTLIB1_p = python24$(PYTHONLIB_POSTFIX).lib
!endif
__SCRIPTLIB2A_p =
!ifeq USE_LUA 1
__SCRIPTLIB2A_p = lua.lib
!endif
__SCRIPTLIB2B_p =
!ifeq USE_LUA 1
__SCRIPTLIB2B_p = lualib.lib
!endif
__SCRIPTLIB2C_p =
!ifeq USE_LUA 1
__SCRIPTLIB2C_p = tolua.lib
!endif
__SCRIPTLIB3_p =
!ifeq USE_CINT 1
__SCRIPTLIB3_p = cint.lib
!endif
__SCRIPTLIB4_p =
!ifeq USE_UNDERC 1
__SCRIPTLIB4_p = ucc12.lib
!endif
__DEBUG_DEFINE_p =
!ifeq BUILD debug
__DEBUG_DEFINE_p = -d__WXDEBUG__
!endif

### Variables: ###

WXSCRIPT_CXXFLAGS = $(__WARNINGS) $(__UNICODE_DEFINE_p) $(__OPTIMIZEFLAG) &
	$(__DEBUGINFO) -i=$(WXWIN)\include &
	-i=$(WXWIN)\lib\wat_lib\msw$(WXLIBPOSTFIX) -i=..\include $(SCRIPTDEFINE1) &
	$(SCRIPTDEFINE2) $(SCRIPTDEFINE3) $(SCRIPTDEFINE4) $(SCRIPTINCLUDE1) &
	$(SCRIPTINCLUDE2) $(SCRIPTINCLUDE3) $(SCRIPTINCLUDE4) $(CPPFLAGS) &
	$(CXXFLAGS)
WXSCRIPT_OBJECTS =  &
	watcom\wxscript_script.obj &
	watcom\wxscript_scpython.obj &
	watcom\wxscript_sccint.obj &
	watcom\wxscript_scunderc.obj &
	watcom\wxscript_sclua.obj
TEST1_CXXFLAGS = $(__WARNINGS) $(__UNICODE_DEFINE_p) $(__OPTIMIZEFLAG) &
	$(__DEBUGINFO) -i=..\include -i=$(WXWIN)\include &
	-i=$(WXWIN)\lib\wat_lib\msw$(WXLIBPOSTFIX) $(SCRIPTDEFINE1) &
	$(SCRIPTDEFINE2) $(SCRIPTDEFINE3) $(SCRIPTDEFINE4) $(SCRIPTINCLUDE1) &
	$(SCRIPTINCLUDE2) $(SCRIPTINCLUDE3) $(SCRIPTINCLUDE4) $(__DEBUG_DEFINE_p) &
	-d__WXMSW__ $(CPPFLAGS) $(CXXFLAGS)
TEST1_OBJECTS =  &
	watcom\test1_Test.obj
TEST2_CXXFLAGS = $(__WARNINGS) $(__UNICODE_DEFINE_p) $(__OPTIMIZEFLAG) &
	$(__DEBUGINFO) -i=..\include -i=$(WXWIN)\include &
	-i=$(WXWIN)\lib\wat_lib\msw$(WXLIBPOSTFIX) $(SCRIPTDEFINE1) &
	$(SCRIPTDEFINE2) $(SCRIPTDEFINE3) $(SCRIPTDEFINE4) $(SCRIPTINCLUDE1) &
	$(SCRIPTINCLUDE2) $(SCRIPTINCLUDE3) $(SCRIPTINCLUDE4) $(__DEBUG_DEFINE_p) &
	-d__WXMSW__ $(CPPFLAGS) $(CXXFLAGS)
TEST2_OBJECTS =  &
	watcom\test2_Test.obj


all : watcom
watcom :
	-if not exist watcom mkdir watcom

### Targets: ###

all : .SYMBOLIC ..\lib\wxscript$(WXLIBPOSTFIX).lib ..\tests\test1\test1.exe ..\tests\test2\test2.exe

clean : .SYMBOLIC 
	-if exist watcom\*.obj del watcom\*.obj
	-if exist watcom\*.res del watcom\*.res
	-if exist watcom\*.lbc del watcom\*.lbc
	-if exist watcom\*.ilk del watcom\*.ilk
	-if exist watcom\*.pch del watcom\*.pch
	-if exist ..\lib\wxscript$(WXLIBPOSTFIX).lib del ..\lib\wxscript$(WXLIBPOSTFIX).lib
	-if exist ..\tests\test1\test1.exe del ..\tests\test1\test1.exe
	-if exist ..\tests\test2\test2.exe del ..\tests\test2\test2.exe

tarball :  
	( cd .. && tar -cvzf wxscript.tar.gz --exclude=*.pdb --exclude=*.log --exclude=*.o* * )

zip :  
	( cd .. && zip -r9 wxscript.zip *  -x *.pdb -x *.log -x *.o* )

cleanbuilddirs :  
	-if exist msvc rmdir /S /Q msvc
	-if exist watcom rmdir /S /Q watcom
	-if exist borland rmdir /S /Q borland
	-if exist mingw rmdir /S /Q mingw

cleanall :  clean cleanbuilddirs
	del /S /Q ..\*.log >NUL
	del /S /Q ..\*.lib >NUL
	del /S /Q ..\*.a >NUL
	del /S /Q ..\*.exe >NUL

docs :  
	( cd ..\docs && doxygen )

cleandocs :  
	-if exist ..\docs\html rmdir /S /Q ..\docs\html

..\lib\wxscript$(WXLIBPOSTFIX).lib :  $(WXSCRIPT_OBJECTS)
	@%create watcom\wxscript.lbc
	@for %i in ($(WXSCRIPT_OBJECTS)) do @%append watcom\wxscript.lbc +%i
	wlib -q -p4096 -n -b $^@ @watcom\wxscript.lbc

..\tests\test1\test1.exe :  $(TEST1_OBJECTS) ..\lib\wxscript$(WXLIBPOSTFIX).lib
	@%create watcom\test1.lbc
	@%append watcom\test1.lbc option quiet
	@%append watcom\test1.lbc name $^@
	@%append watcom\test1.lbc option caseexact
	@%append watcom\test1.lbc $(LDFLAGS) $(__DEBUGINFO_0) libpath ..\lib libpath $(WXWIN)\lib\wat_lib $(SCRIPTLIBPATH1) $(SCRIPTLIBPATH2) $(SCRIPTLIBPATH3) $(SCRIPTLIBPATH4) system nt ref 'main_'
	@for %i in ($(TEST1_OBJECTS)) do @%append watcom\test1.lbc file %i
	@for %i in ( ..\lib\wxscript$(WXLIBPOSTFIX).lib $(__SCRIPTLIB1_p) $(__SCRIPTLIB2A_p) $(__SCRIPTLIB2B_p) $(__SCRIPTLIB2C_p) $(__SCRIPTLIB3_p) $(__SCRIPTLIB4_p) wxmsw25$(WXLIBPOSTFIX)_core.lib wxmsw25$(WXLIBPOSTFIX)_html.lib wxbase25$(WXLIBPOSTFIX).lib wxtiff$(WXSUBLIBPOSTFIX).lib wxjpeg$(WXSUBLIBPOSTFIX).lib wxpng$(WXSUBLIBPOSTFIX).lib wxzlib$(WXSUBLIBPOSTFIX).lib wxregex$(WXLIBPOSTFIX).lib wxexpat$(WXSUBLIBPOSTFIX).lib kernel32.lib user32.lib gdi32.lib comdlg32.lib winspool.lib winmm.lib shell32.lib comctl32.lib ole32.lib oleaut32.lib uuid.lib rpcrt4.lib advapi32.lib wsock32.lib odbc32.lib) do @%append watcom\test1.lbc library %i
	@%append watcom\test1.lbc
	wlink @watcom\test1.lbc

..\tests\test2\test2.exe :  $(TEST2_OBJECTS) ..\lib\wxscript$(WXLIBPOSTFIX).lib
	@%create watcom\test2.lbc
	@%append watcom\test2.lbc option quiet
	@%append watcom\test2.lbc name $^@
	@%append watcom\test2.lbc option caseexact
	@%append watcom\test2.lbc $(LDFLAGS) $(__DEBUGINFO_0) libpath ..\lib libpath $(WXWIN)\lib\wat_lib $(SCRIPTLIBPATH1) $(SCRIPTLIBPATH2) $(SCRIPTLIBPATH3) $(SCRIPTLIBPATH4) system nt ref 'main_'
	@for %i in ($(TEST2_OBJECTS)) do @%append watcom\test2.lbc file %i
	@for %i in ( ..\lib\wxscript$(WXLIBPOSTFIX).lib $(__SCRIPTLIB1_p) $(__SCRIPTLIB2A_p) $(__SCRIPTLIB2B_p) $(__SCRIPTLIB2C_p) $(__SCRIPTLIB3_p) $(__SCRIPTLIB4_p) wxmsw25$(WXLIBPOSTFIX)_core.lib wxmsw25$(WXLIBPOSTFIX)_html.lib wxbase25$(WXLIBPOSTFIX).lib wxtiff$(WXSUBLIBPOSTFIX).lib wxjpeg$(WXSUBLIBPOSTFIX).lib wxpng$(WXSUBLIBPOSTFIX).lib wxzlib$(WXSUBLIBPOSTFIX).lib wxregex$(WXLIBPOSTFIX).lib wxexpat$(WXSUBLIBPOSTFIX).lib kernel32.lib user32.lib gdi32.lib comdlg32.lib winspool.lib winmm.lib shell32.lib comctl32.lib ole32.lib oleaut32.lib uuid.lib rpcrt4.lib advapi32.lib wsock32.lib odbc32.lib) do @%append watcom\test2.lbc library %i
	@%append watcom\test2.lbc
	wlink @watcom\test2.lbc

watcom\wxscript_script.obj :  .AUTODEPEND .\..\src\script.cpp
	$(CXX) -zq -fo=$^@ $(WXSCRIPT_CXXFLAGS) $<

watcom\wxscript_scpython.obj :  .AUTODEPEND .\..\src\scpython.cpp
	$(CXX) -zq -fo=$^@ $(WXSCRIPT_CXXFLAGS) $<

watcom\wxscript_sccint.obj :  .AUTODEPEND .\..\src\sccint.cpp
	$(CXX) -zq -fo=$^@ $(WXSCRIPT_CXXFLAGS) $<

watcom\wxscript_scunderc.obj :  .AUTODEPEND .\..\src\scunderc.cpp
	$(CXX) -zq -fo=$^@ $(WXSCRIPT_CXXFLAGS) $<

watcom\wxscript_sclua.obj :  .AUTODEPEND .\..\src\sclua.cpp
	$(CXX) -zq -fo=$^@ $(WXSCRIPT_CXXFLAGS) $<

watcom\test1_Test.obj :  .AUTODEPEND .\..\tests\test1\Test.cpp
	$(CXX) -zq -fo=$^@ $(TEST1_CXXFLAGS) $<

watcom\test2_Test.obj :  .AUTODEPEND .\..\tests\test2\Test.cpp
	$(CXX) -zq -fo=$^@ $(TEST2_CXXFLAGS) $<

