# =========================================================================
#     This makefile was generated by
#     Bakefile 0.1.5 (http://bakefile.sourceforge.net)
#     Do not modify, all changes will be overwritten!
# =========================================================================



# -------------------------------------------------------------------------
# These are configurable options:
# -------------------------------------------------------------------------

# C++ compiler 
CXX = cl

# Standard flags for C++ 
CXXFLAGS = 

# Standard preprocessor flags (common for CC and CXX) 
CPPFLAGS = 

# Standard linker flags 
LDFLAGS = 

# If 0 Python won't be used [0,1]
USE_PYTHON = 1

# If 0 LUA won't be used [0,1]
USE_LUA = 1

# If 0 CINT won't be used [0,1]
USE_CINT = 0

# If 0 UnderC won't be used [0,1]
USE_UNDERC = 0

# The Python library main folder 
PYTHON_DIR = c:\Python

# The Python library version (2.2, 2.3, 2.4 ...) [2_2,2_3,2_4,2_5,2_6]
PYTHON_VER = 2_4

# The LUA library main folder 
LUA_DIR = c:\lua

# The TOLUA library main folder 
TOLUA_DIR = c:\tolua

# The CINT library main folder 
CINT_DIR = c:\cint

# The UnderC library main folder 
UNDERC_DIR = c:\ucc

# Should UNICODE be enabled ? [0,1]
UNICODE = 0

# Type of compiled binaries [debug,release]
BUILD = debug

# The wxWidgets library main folder 
WXWIN = c:\wxWidgets



# -------------------------------------------------------------------------
# Do not modify the rest of this file!
# -------------------------------------------------------------------------

### Variables: ###

WXSCRIPT_CXXFLAGS = /MD$(__DEBUGRUNTIME) /DWIN32 $(__WARNINGS) \
	$(__UNICODE_DEFINE_p) $(__OPTIMIZEFLAG) $(__DEBUGINFO) \
	/Fd..\lib\wxscript$(WXLIBPOSTFIX).pdb $(____DEBUGRUNTIME) \
	/I$(WXWIN)\include /I$(WXWIN)\lib\vc_lib\msw$(WXLIBPOSTFIX) /I..\include \
	$(SCRIPTDEFINE1) $(SCRIPTDEFINE2) $(SCRIPTDEFINE3) $(SCRIPTDEFINE4) \
	$(SCRIPTINCLUDE1) $(SCRIPTINCLUDE2) $(SCRIPTINCLUDE3) $(SCRIPTINCLUDE4) /GR \
	/GX $(CPPFLAGS) $(CXXFLAGS)
WXSCRIPT_OBJECTS =  \
	msvc\wxscript_script.obj \
	msvc\wxscript_scpython.obj \
	msvc\wxscript_sccint.obj \
	msvc\wxscript_scunderc.obj \
	msvc\wxscript_sclua.obj
TEST1_CXXFLAGS = /MD$(__DEBUGRUNTIME) /DWIN32 $(__WARNINGS) \
	$(__UNICODE_DEFINE_p) $(__OPTIMIZEFLAG) $(__DEBUGINFO) \
	/Fd..\tests\test1\test1.pdb $(____DEBUGRUNTIME) /I..\include \
	/I$(WXWIN)\include /I$(WXWIN)\lib\vc_lib\msw$(WXLIBPOSTFIX) \
	$(SCRIPTDEFINE1) $(SCRIPTDEFINE2) $(SCRIPTDEFINE3) $(SCRIPTDEFINE4) \
	$(SCRIPTINCLUDE1) $(SCRIPTINCLUDE2) $(SCRIPTINCLUDE3) $(SCRIPTINCLUDE4) \
	/D_CONSOLE $(__DEBUG_DEFINE_p) /D__WXMSW__ /GR /GX $(CPPFLAGS) $(CXXFLAGS)
TEST1_OBJECTS =  \
	msvc\test1_Test.obj
TEST2_CXXFLAGS = /MD$(__DEBUGRUNTIME) /DWIN32 $(__WARNINGS) \
	$(__UNICODE_DEFINE_p) $(__OPTIMIZEFLAG) $(__DEBUGINFO) \
	/Fd..\tests\test2\test2.pdb $(____DEBUGRUNTIME) /I..\include \
	/I$(WXWIN)\include /I$(WXWIN)\lib\vc_lib\msw$(WXLIBPOSTFIX) \
	$(SCRIPTDEFINE1) $(SCRIPTDEFINE2) $(SCRIPTDEFINE3) $(SCRIPTDEFINE4) \
	$(SCRIPTINCLUDE1) $(SCRIPTINCLUDE2) $(SCRIPTINCLUDE3) $(SCRIPTINCLUDE4) \
	/D_CONSOLE $(__DEBUG_DEFINE_p) /D__WXMSW__ /GR /GX $(CPPFLAGS) $(CXXFLAGS)
TEST2_OBJECTS =  \
	msvc\test2_Test.obj \
	msvc\test2_stackwalker.obj

### Conditionally set variables: ###

!if "$(BUILD)" == "debug"
WXSUBLIBPOSTFIX = d
!endif
!if "$(PYTHON_VER)" == "2_2"
PYTHON_MAJVER = 2
!endif
!if "$(PYTHON_VER)" == "2_3"
PYTHON_MAJVER = 2
!endif
!if "$(PYTHON_VER)" == "2_4"
PYTHON_MAJVER = 2
!endif
!if "$(PYTHON_VER)" == "2_5"
PYTHON_MAJVER = 2
!endif
!if "$(PYTHON_VER)" == "2_6"
PYTHON_MAJVER = 2
!endif
!if "$(PYTHON_VER)" == "2_2"
PYTHON_MINVER = 2
!endif
!if "$(PYTHON_VER)" == "2_3"
PYTHON_MINVER = 3
!endif
!if "$(PYTHON_VER)" == "2_4"
PYTHON_MINVER = 4
!endif
!if "$(PYTHON_VER)" == "2_5"
PYTHON_MINVER = 5
!endif
!if "$(PYTHON_VER)" == "2_6"
PYTHON_MINVER = 6
!endif
!if "$(BUILD)" == "debug"
PYTHONLIB_POSTFIX = _d
!endif
!if "$(USE_PYTHON)" == "1"
SCRIPTINCLUDE1 = /I$(PYTHON_DIR)\include
!endif
!if "$(USE_LUA)" == "1"
SCRIPTINCLUDE2 = /I$(LUA_DIR)\include /I$(TOLUA_DIR)\include
!endif
!if "$(USE_CINT)" == "1"
SCRIPTINCLUDE3 = /I$(CINT_DIR)
!endif
!if "$(USE_UNDERC)" == "1"
SCRIPTINCLUDE4 = /I$(UNDERC_DIR)
!endif
!if "$(USE_PYTHON)" == "1"
SCRIPTLIBPATH1 = /LIBPATH:$(PYTHON_DIR)\libs
!endif
!if "$(USE_LUA)" == "1"
SCRIPTLIBPATH2 = /LIBPATH:$(LUA_DIR)\lib /LIBPATH:$(TOLUA_DIR)\lib
!endif
!if "$(USE_CINT)" == "1"
SCRIPTLIBPATH3 = /LIBPATH:$(CINT_DIR)\lib
!endif
!if "$(USE_UNDERC)" == "1"
SCRIPTLIBPATH4 = /LIBPATH:$(UNDERC_DIR)\lib
!endif
!if "$(USE_PYTHON)" == "0"
SCRIPTDEFINE1 = /DwxSCRIPT_NO_PYTHON
!endif
!if "$(USE_LUA)" == "0"
SCRIPTDEFINE2 = /DwxSCRIPT_NO_LUA
!endif
!if "$(USE_CINT)" == "0"
SCRIPTDEFINE3 = /DwxSCRIPT_NO_CINT
!endif
!if "$(USE_UNDERC)" == "0"
SCRIPTDEFINE4 = /DwxSCRIPT_NO_UNDERC
!endif
!if "$(BUILD)" == "debug"
__WARNINGS = /W4
!endif
!if "$(BUILD)" == "release"
__WARNINGS = /w
!endif
!if "$(UNICODE)" == "1"
__UNICODE_DEFINE_p = /D_UNICODE
!endif
!if "$(BUILD)" == "debug"
__OPTIMIZEFLAG = /Od
!endif
!if "$(BUILD)" == "release"
__OPTIMIZEFLAG = /O2
!endif
!if "$(BUILD)" == "debug"
__DEBUGINFO = /Zi
!endif
!if "$(BUILD)" == "release"
__DEBUGINFO = 
!endif
!if "$(BUILD)" == "debug"
__DEBUGINFO_0 = /DEBUG
!endif
!if "$(BUILD)" == "release"
__DEBUGINFO_0 = 
!endif
!if "$(BUILD)" == "debug"
____DEBUGRUNTIME = /D_DEBUG
!endif
!if "$(BUILD)" == "release"
____DEBUGRUNTIME = 
!endif
!if "$(BUILD)" == "debug"
__DEBUGRUNTIME = d
!endif
!if "$(BUILD)" == "release"
__DEBUGRUNTIME = 
!endif
!if "$(BUILD)" == "debug" && "$(UNICODE)" == "0"
WXLIBPOSTFIX = d
!endif
!if "$(BUILD)" == "debug" && "$(UNICODE)" == "1"
WXLIBPOSTFIX = ud
!endif
!if "$(BUILD)" == "release" && "$(UNICODE)" == "1"
WXLIBPOSTFIX = u
!endif
!if "$(USE_PYTHON)" == "1"
__SCRIPTLIB1_p = \
	python$(PYTHON_MAJVER)$(PYTHON_MINVER)$(PYTHONLIB_POSTFIX).lib
!endif
!if "$(USE_LUA)" == "1"
__SCRIPTLIB2A_p = lua.lib
!endif
!if "$(USE_LUA)" == "1"
__SCRIPTLIB2B_p = lualib.lib
!endif
!if "$(USE_LUA)" == "1"
__SCRIPTLIB2C_p = tolua.lib
!endif
!if "$(USE_CINT)" == "1"
__SCRIPTLIB3_p = cint.lib
!endif
!if "$(USE_UNDERC)" == "1"
__SCRIPTLIB4_p = ucc12.lib
!endif
!if "$(BUILD)" == "debug"
__DEBUG_DEFINE_p = /D__WXDEBUG__
!endif


all: msvc
msvc:
	-if not exist msvc mkdir msvc

### Targets: ###

all: ..\lib\wxscript$(WXLIBPOSTFIX).lib ..\tests\test1\test1.exe ..\tests\test2\test2.exe

clean: 
	-if exist msvc\*.obj del msvc\*.obj
	-if exist msvc\*.res del msvc\*.res
	-if exist msvc\*.pch del msvc\*.pch
	-if exist ..\lib\wxscript$(WXLIBPOSTFIX).lib del ..\lib\wxscript$(WXLIBPOSTFIX).lib
	-if exist ..\tests\test1\test1.exe del ..\tests\test1\test1.exe
	-if exist ..\tests\test1\test1.ilk del ..\tests\test1\test1.ilk
	-if exist ..\tests\test1\test1.pdb del ..\tests\test1\test1.pdb
	-if exist ..\tests\test2\test2.exe del ..\tests\test2\test2.exe
	-if exist ..\tests\test2\test2.ilk del ..\tests\test2\test2.ilk
	-if exist ..\tests\test2\test2.pdb del ..\tests\test2\test2.pdb

tarball: 
	( cd .. && tar -cvzf ..\wxscript.tar.gz --exclude=*.pdb --exclude=*.log --exclude=*.o* * )

zip: 
	( cd .. && zip -r9 ..\wxscript.zip *  -x *.pdb -x *.log -x *.o* )

cleanbuilddirs: 
	-if exist msvc rmdir /S /Q msvc
	-if exist watcom rmdir /S /Q watcom
	-if exist borland rmdir /S /Q borland
	-if exist mingw rmdir /S /Q mingw
	-if exist msvc6prj rmdir /S /Q msvc6prj

cleanall: clean cleanbuilddirs
	del /S /Q ..\*.log >NUL
	del /S /Q ..\*.lib >NUL
	del /S /Q ..\*.a >NUL
	del /S /Q ..\*.exe >NUL

docs: 
	( cd ..\docs && doxygen )

cleandocs: 
	-if exist ..\docs\html rmdir /S /Q ..\docs\html

..\lib\wxscript$(WXLIBPOSTFIX).lib: $(WXSCRIPT_OBJECTS)
	if exist $@ del $@
	lib /NOLOGO /OUT:$@ @<<
	$(WXSCRIPT_OBJECTS)
<<

..\tests\test1\test1.exe: $(TEST1_OBJECTS) ..\lib\wxscript$(WXLIBPOSTFIX).lib
	link /NOLOGO /OUT:$@ $(LDFLAGS) $(__DEBUGINFO_0) /LIBPATH:..\lib /LIBPATH:$(WXWIN)\lib\vc_lib $(SCRIPTLIBPATH1) $(SCRIPTLIBPATH2) $(SCRIPTLIBPATH3) $(SCRIPTLIBPATH4) /SUBSYSTEM:CONSOLE @<<
	$(TEST1_OBJECTS)  ..\lib\wxscript$(WXLIBPOSTFIX).lib $(__SCRIPTLIB1_p) $(__SCRIPTLIB2A_p) $(__SCRIPTLIB2B_p) $(__SCRIPTLIB2C_p) $(__SCRIPTLIB3_p) $(__SCRIPTLIB4_p) wxmsw25$(WXLIBPOSTFIX)_core.lib wxmsw25$(WXLIBPOSTFIX)_html.lib wxbase25$(WXLIBPOSTFIX).lib wxtiff$(WXSUBLIBPOSTFIX).lib wxjpeg$(WXSUBLIBPOSTFIX).lib wxpng$(WXSUBLIBPOSTFIX).lib wxzlib$(WXSUBLIBPOSTFIX).lib wxregex$(WXLIBPOSTFIX).lib wxexpat$(WXSUBLIBPOSTFIX).lib kernel32.lib user32.lib gdi32.lib comdlg32.lib winspool.lib winmm.lib shell32.lib comctl32.lib ole32.lib oleaut32.lib uuid.lib rpcrt4.lib advapi32.lib wsock32.lib odbc32.lib oleacc.lib
<<

..\tests\test2\test2.exe: $(TEST2_OBJECTS) ..\lib\wxscript$(WXLIBPOSTFIX).lib
	link /NOLOGO /OUT:$@ $(LDFLAGS) $(__DEBUGINFO_0) /LIBPATH:..\lib /LIBPATH:$(WXWIN)\lib\vc_lib $(SCRIPTLIBPATH1) $(SCRIPTLIBPATH2) $(SCRIPTLIBPATH3) $(SCRIPTLIBPATH4) /SUBSYSTEM:CONSOLE @<<
	$(TEST2_OBJECTS)  ..\lib\wxscript$(WXLIBPOSTFIX).lib $(__SCRIPTLIB1_p) $(__SCRIPTLIB2A_p) $(__SCRIPTLIB2B_p) $(__SCRIPTLIB2C_p) $(__SCRIPTLIB3_p) $(__SCRIPTLIB4_p) wxmsw25$(WXLIBPOSTFIX)_core.lib wxmsw25$(WXLIBPOSTFIX)_html.lib wxbase25$(WXLIBPOSTFIX).lib wxtiff$(WXSUBLIBPOSTFIX).lib wxjpeg$(WXSUBLIBPOSTFIX).lib wxpng$(WXSUBLIBPOSTFIX).lib wxzlib$(WXSUBLIBPOSTFIX).lib wxregex$(WXLIBPOSTFIX).lib wxexpat$(WXSUBLIBPOSTFIX).lib kernel32.lib user32.lib gdi32.lib comdlg32.lib winspool.lib winmm.lib shell32.lib comctl32.lib ole32.lib oleaut32.lib uuid.lib rpcrt4.lib advapi32.lib wsock32.lib odbc32.lib oleacc.lib
<<

msvc\wxscript_script.obj: .\..\src\script.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(WXSCRIPT_CXXFLAGS) $**

msvc\wxscript_scpython.obj: .\..\src\scpython.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(WXSCRIPT_CXXFLAGS) $**

msvc\wxscript_sccint.obj: .\..\src\sccint.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(WXSCRIPT_CXXFLAGS) $**

msvc\wxscript_scunderc.obj: .\..\src\scunderc.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(WXSCRIPT_CXXFLAGS) $**

msvc\wxscript_sclua.obj: .\..\src\sclua.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(WXSCRIPT_CXXFLAGS) $**

msvc\test1_Test.obj: .\..\tests\test1\Test.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(TEST1_CXXFLAGS) $**

msvc\test2_Test.obj: .\..\tests\test2\Test.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(TEST2_CXXFLAGS) $**

msvc\test2_stackwalker.obj: .\..\tests\test2\stackwalker.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(TEST2_CXXFLAGS) $**

